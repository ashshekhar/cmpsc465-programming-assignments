Actual graph
defaultdict(<class 'dict'>, {1: {18: (24, 0), 16: (8, 0), 11: (8, 0), 8: (7, 0), 9: (3, 0), 12: (7, 0), 15: (9, 0), 2: (7, 0)}, 11: {20: (6, 0), 4: (8, 0)}, 4: {20: (11, 0)}, 14: {20: (4, 0), 16: (6, 0), 19: (7, 0), 15: (8, 0)}, 9: {20: (14, 0), 7: (8, 0), 8: (10, 0), 4: (4, 0), 19: (10, 0)}, 8: {20: (6, 0)}, 18: {20: (7, 0), 7: (2, 0), 8: (5, 0)}, 16: {20: (5, 0), 5: (3, 0), 7: (10, 0), 17: (4, 0)}, 17: {20: (4, 0), 14: (7, 0), 13: (1, 0), 5: (3, 0)}, 5: {13: (5, 0)}, 15: {9: (4, 0), 7: (2, 0)}, 12: {11: (6, 0), 7: (5, 0)}, 10: {9: (2, 0), 17: (9, 0), 3: (8, 0)}, 3: {2: (10, 0)}, 7: {10: (9, 0)}, 13: {16: (4, 0), 10: (2, 0)}, 6: {16: (10, 0)}})
Residual graph
defaultdict(<class 'dict'>, {1: {18: 24, 16: 8, 11: 8, 8: 7, 9: 3, 12: 7, 15: 9, 2: 7}, 11: {20: 6, 4: 8}, 4: {20: 11}, 14: {20: 4, 16: 6, 19: 7, 15: 8}, 9: {20: 14, 7: 8, 8: 10, 4: 4, 19: 10}, 8: {20: 6}, 18: {20: 7, 7: 2, 8: 5}, 16: {20: 5, 5: 3, 7: 10, 17: 4}, 17: {20: 4, 14: 7, 13: 1, 5: 3}, 5: {13: 5}, 15: {9: 4, 7: 2}, 12: {11: 6, 7: 5}, 10: {9: 2, 17: 9, 3: 8}, 3: {2: 10}, 7: {10: 9}, 13: {16: 4, 10: 2}, 6: {16: 10}})
All paths
[[1, 18, 20], [1, 18, 7, 10, 9, 20], [1, 18, 7, 10, 9, 8, 20], [1, 18, 7, 10, 9, 4, 20], [1, 18, 7, 10, 17, 20], [1, 18, 7, 10, 17, 14, 20], [1, 18, 7, 10, 17, 14, 16, 20], [1, 18, 7, 10, 17, 14, 15, 9, 20], [1, 18, 7, 10, 17, 14, 15, 9, 8, 20], [1, 18, 7, 10, 17, 14, 15, 9, 4, 20], [1, 18, 7, 10, 17, 13, 16, 20], [1, 18, 7, 10, 17, 5, 13, 16, 20], [1, 18, 8, 20], [1, 16, 20], [1, 16, 5, 13, 10, 9, 20], [1, 16, 5, 13, 10, 9, 8, 20], [1, 16, 5, 13, 10, 9, 4, 20], [1, 16, 5, 13, 10, 17, 20], [1, 16, 5, 13, 10, 17, 14, 20], [1, 16, 5, 13, 10, 17, 14, 15, 9, 20], [1, 16, 5, 13, 10, 17, 14, 15, 9, 8, 20], [1, 16, 5, 13, 10, 17, 14, 15, 9, 4, 20], [1, 16, 7, 10, 9, 20], [1, 16, 7, 10, 9, 8, 20], [1, 16, 7, 10, 9, 4, 20], [1, 16, 7, 10, 17, 20], [1, 16, 7, 10, 17, 14, 20], [1, 16, 7, 10, 17, 14, 15, 9, 20], [1, 16, 7, 10, 17, 14, 15, 9, 8, 20], [1, 16, 7, 10, 17, 14, 15, 9, 4, 20], [1, 16, 17, 20], [1, 16, 17, 14, 20], [1, 16, 17, 14, 15, 9, 20], [1, 16, 17, 14, 15, 9, 8, 20], [1, 16, 17, 14, 15, 9, 4, 20], [1, 16, 17, 14, 15, 7, 10, 9, 20], [1, 16, 17, 14, 15, 7, 10, 9, 8, 20], [1, 16, 17, 14, 15, 7, 10, 9, 4, 20], [1, 16, 17, 13, 10, 9, 20], [1, 16, 17, 13, 10, 9, 8, 20], [1, 16, 17, 13, 10, 9, 4, 20], [1, 16, 17, 5, 13, 10, 9, 20], [1, 16, 17, 5, 13, 10, 9, 8, 20], [1, 16, 17, 5, 13, 10, 9, 4, 20], [1, 11, 20], [1, 11, 4, 20], [1, 8, 20], [1, 9, 20], [1, 9, 7, 10, 17, 20], [1, 9, 7, 10, 17, 14, 20], [1, 9, 7, 10, 17, 14, 16, 20], [1, 9, 7, 10, 17, 13, 16, 20], [1, 9, 7, 10, 17, 5, 13, 16, 20], [1, 9, 8, 20], [1, 9, 4, 20], [1, 12, 11, 20], [1, 12, 11, 4, 20], [1, 12, 7, 10, 9, 20], [1, 12, 7, 10, 9, 8, 20], [1, 12, 7, 10, 9, 4, 20], [1, 12, 7, 10, 17, 20], [1, 12, 7, 10, 17, 14, 20], [1, 12, 7, 10, 17, 14, 16, 20], [1, 12, 7, 10, 17, 14, 15, 9, 20], [1, 12, 7, 10, 17, 14, 15, 9, 8, 20], [1, 12, 7, 10, 17, 14, 15, 9, 4, 20], [1, 12, 7, 10, 17, 13, 16, 20], [1, 12, 7, 10, 17, 5, 13, 16, 20], [1, 15, 9, 20], [1, 15, 9, 7, 10, 17, 20], [1, 15, 9, 7, 10, 17, 14, 20], [1, 15, 9, 7, 10, 17, 14, 16, 20], [1, 15, 9, 7, 10, 17, 13, 16, 20], [1, 15, 9, 7, 10, 17, 5, 13, 16, 20], [1, 15, 9, 8, 20], [1, 15, 9, 4, 20], [1, 15, 7, 10, 9, 20], [1, 15, 7, 10, 9, 8, 20], [1, 15, 7, 10, 9, 4, 20], [1, 15, 7, 10, 17, 20], [1, 15, 7, 10, 17, 14, 20], [1, 15, 7, 10, 17, 14, 16, 20], [1, 15, 7, 10, 17, 13, 16, 20], [1, 15, 7, 10, 17, 5, 13, 16, 20]]
Capacities: [24, 7]
Bottleneck: 7
defaultdict(<class 'dict'>, {1: {18: (24, 0), 16: (8, 0), 11: (8, 0), 8: (7, 0), 9: (3, 0), 12: (7, 0), 15: (9, 0), 2: (7, 0)}, 11: {20: (6, 0), 4: (8, 0)}, 4: {20: (11, 0)}, 14: {20: (4, 0), 16: (6, 0), 19: (7, 0), 15: (8, 0)}, 9: {20: (14, 0), 7: (8, 0), 8: (10, 0), 4: (4, 0), 19: (10, 0)}, 8: {20: (6, 0)}, 18: {20: (7, 0), 7: (2, 0), 8: (5, 0)}, 16: {20: (5, 0), 5: (3, 0), 7: (10, 0), 17: (4, 0)}, 17: {20: (4, 0), 14: (7, 0), 13: (1, 0), 5: (3, 0)}, 5: {13: (5, 0)}, 15: {9: (4, 0), 7: (2, 0)}, 12: {11: (6, 0), 7: (5, 0)}, 10: {9: (2, 0), 17: (9, 0), 3: (8, 0)}, 3: {2: (10, 0)}, 7: {10: (9, 0)}, 13: {16: (4, 0), 10: (2, 0)}, 6: {16: (10, 0)}})
Initial capacity flow in FE: (24, 0) for source 1 and sink 18
New capacity flow in FE: (24, 0) for source 1 and sink 18
Initial capacity flow in FE: (7, 0) for source 18 and sink 20
New capacity flow in FE: (7, 0) for source 18 and sink 20
Actual graph
defaultdict(<class 'dict'>, {1: {18: (24, 7), 16: (8, 0), 11: (8, 0), 8: (7, 0), 9: (3, 0), 12: (7, 0), 15: (9, 0), 2: (7, 0)}, 11: {20: (6, 0), 4: (8, 0)}, 4: {20: (11, 0)}, 14: {20: (4, 0), 16: (6, 0), 19: (7, 0), 15: (8, 0)}, 9: {20: (14, 0), 7: (8, 0), 8: (10, 0), 4: (4, 0), 19: (10, 0)}, 8: {20: (6, 0)}, 18: {20: (7, 7), 7: (2, 0), 8: (5, 0)}, 16: {20: (5, 0), 5: (3, 0), 7: (10, 0), 17: (4, 0)}, 17: {20: (4, 0), 14: (7, 0), 13: (1, 0), 5: (3, 0)}, 5: {13: (5, 0)}, 15: {9: (4, 0), 7: (2, 0)}, 12: {11: (6, 0), 7: (5, 0)}, 10: {9: (2, 0), 17: (9, 0), 3: (8, 0)}, 3: {2: (10, 0)}, 7: {10: (9, 0)}, 13: {16: (4, 0), 10: (2, 0)}, 6: {16: (10, 0)}})
Residual graph
defaultdict(<class 'dict'>, {1: {18: 17, 16: 8, 11: 8, 8: 7, 9: 3, 12: 7, 15: 9, 2: 7}, 18: {1: 7, 7: 2, 8: 5}, 11: {20: 6, 4: 8}, 4: {20: 11}, 14: {20: 4, 16: 6, 19: 7, 15: 8}, 9: {20: 14, 7: 8, 8: 10, 4: 4, 19: 10}, 8: {20: 6}, 20: {18: 7}, 16: {20: 5, 5: 3, 7: 10, 17: 4}, 17: {20: 4, 14: 7, 13: 1, 5: 3}, 5: {13: 5}, 15: {9: 4, 7: 2}, 12: {11: 6, 7: 5}, 10: {9: 2, 17: 9, 3: 8}, 3: {2: 10}, 7: {10: 9}, 13: {16: 4, 10: 2}, 6: {16: 10}})
All paths
[[1, 18, 7, 10, 9, 20], [1, 18, 7, 10, 9, 8, 20], [1, 18, 7, 10, 9, 4, 20], [1, 18, 7, 10, 17, 20], [1, 18, 7, 10, 17, 14, 20], [1, 18, 7, 10, 17, 14, 16, 20], [1, 18, 7, 10, 17, 14, 15, 9, 20], [1, 18, 7, 10, 17, 14, 15, 9, 8, 20], [1, 18, 7, 10, 17, 14, 15, 9, 4, 20], [1, 18, 7, 10, 17, 13, 16, 20], [1, 18, 7, 10, 17, 5, 13, 16, 20], [1, 18, 8, 20], [1, 16, 20], [1, 16, 5, 13, 10, 9, 20], [1, 16, 5, 13, 10, 9, 8, 20], [1, 16, 5, 13, 10, 9, 4, 20], [1, 16, 5, 13, 10, 17, 20], [1, 16, 5, 13, 10, 17, 14, 20], [1, 16, 5, 13, 10, 17, 14, 15, 9, 20], [1, 16, 5, 13, 10, 17, 14, 15, 9, 8, 20], [1, 16, 5, 13, 10, 17, 14, 15, 9, 4, 20], [1, 16, 7, 10, 9, 20], [1, 16, 7, 10, 9, 8, 20], [1, 16, 7, 10, 9, 4, 20], [1, 16, 7, 10, 17, 20], [1, 16, 7, 10, 17, 14, 20], [1, 16, 7, 10, 17, 14, 15, 9, 20], [1, 16, 7, 10, 17, 14, 15, 9, 8, 20], [1, 16, 7, 10, 17, 14, 15, 9, 4, 20], [1, 16, 17, 20], [1, 16, 17, 14, 20], [1, 16, 17, 14, 15, 9, 20], [1, 16, 17, 14, 15, 9, 8, 20], [1, 16, 17, 14, 15, 9, 4, 20], [1, 16, 17, 14, 15, 7, 10, 9, 20], [1, 16, 17, 14, 15, 7, 10, 9, 8, 20], [1, 16, 17, 14, 15, 7, 10, 9, 4, 20], [1, 16, 17, 13, 10, 9, 20], [1, 16, 17, 13, 10, 9, 8, 20], [1, 16, 17, 13, 10, 9, 4, 20], [1, 16, 17, 5, 13, 10, 9, 20], [1, 16, 17, 5, 13, 10, 9, 8, 20], [1, 16, 17, 5, 13, 10, 9, 4, 20], [1, 11, 20], [1, 11, 4, 20], [1, 8, 20], [1, 9, 20], [1, 9, 7, 10, 17, 20], [1, 9, 7, 10, 17, 14, 20], [1, 9, 7, 10, 17, 14, 16, 20], [1, 9, 7, 10, 17, 13, 16, 20], [1, 9, 7, 10, 17, 5, 13, 16, 20], [1, 9, 8, 20], [1, 9, 4, 20], [1, 12, 11, 20], [1, 12, 11, 4, 20], [1, 12, 7, 10, 9, 20], [1, 12, 7, 10, 9, 8, 20], [1, 12, 7, 10, 9, 4, 20], [1, 12, 7, 10, 17, 20], [1, 12, 7, 10, 17, 14, 20], [1, 12, 7, 10, 17, 14, 16, 20], [1, 12, 7, 10, 17, 14, 15, 9, 20], [1, 12, 7, 10, 17, 14, 15, 9, 8, 20], [1, 12, 7, 10, 17, 14, 15, 9, 4, 20], [1, 12, 7, 10, 17, 13, 16, 20], [1, 12, 7, 10, 17, 5, 13, 16, 20], [1, 15, 9, 20], [1, 15, 9, 7, 10, 17, 20], [1, 15, 9, 7, 10, 17, 14, 20], [1, 15, 9, 7, 10, 17, 14, 16, 20], [1, 15, 9, 7, 10, 17, 13, 16, 20], [1, 15, 9, 7, 10, 17, 5, 13, 16, 20], [1, 15, 9, 8, 20], [1, 15, 9, 4, 20], [1, 15, 7, 10, 9, 20], [1, 15, 7, 10, 9, 8, 20], [1, 15, 7, 10, 9, 4, 20], [1, 15, 7, 10, 17, 20], [1, 15, 7, 10, 17, 14, 20], [1, 15, 7, 10, 17, 14, 16, 20], [1, 15, 7, 10, 17, 13, 16, 20], [1, 15, 7, 10, 17, 5, 13, 16, 20]]
Capacities: [17, 2, 14, 2, 9]
Bottleneck: 2
defaultdict(<class 'dict'>, {1: {18: (24, 7), 16: (8, 0), 11: (8, 0), 8: (7, 0), 9: (3, 0), 12: (7, 0), 15: (9, 0), 2: (7, 0)}, 11: {20: (6, 0), 4: (8, 0)}, 4: {20: (11, 0)}, 14: {20: (4, 0), 16: (6, 0), 19: (7, 0), 15: (8, 0)}, 9: {20: (14, 0), 7: (8, 0), 8: (10, 0), 4: (4, 0), 19: (10, 0)}, 8: {20: (6, 0)}, 18: {20: (7, 7), 7: (2, 0), 8: (5, 0)}, 16: {20: (5, 0), 5: (3, 0), 7: (10, 0), 17: (4, 0)}, 17: {20: (4, 0), 14: (7, 0), 13: (1, 0), 5: (3, 0)}, 5: {13: (5, 0)}, 15: {9: (4, 0), 7: (2, 0)}, 12: {11: (6, 0), 7: (5, 0)}, 10: {9: (2, 0), 17: (9, 0), 3: (8, 0)}, 3: {2: (10, 0)}, 7: {10: (9, 0)}, 13: {16: (4, 0), 10: (2, 0)}, 6: {16: (10, 0)}})
Initial capacity flow in FE: (24, 7) for source 1 and sink 18
New capacity flow in FE: (24, 7) for source 1 and sink 18
Initial capacity flow in FE: (14, 0) for source 9 and sink 20
New capacity flow in FE: (14, 0) for source 9 and sink 20
Initial capacity flow in FE: (2, 0) for source 18 and sink 7
New capacity flow in FE: (2, 0) for source 18 and sink 7
Initial capacity flow in FE: (2, 0) for source 10 and sink 9
New capacity flow in FE: (2, 0) for source 10 and sink 9
Initial capacity flow in FE: (9, 0) for source 7 and sink 10
New capacity flow in FE: (9, 0) for source 7 and sink 10
Actual graph
defaultdict(<class 'dict'>, {1: {18: (24, 9), 16: (8, 0), 11: (8, 0), 8: (7, 0), 9: (3, 0), 12: (7, 0), 15: (9, 0), 2: (7, 0)}, 11: {20: (6, 0), 4: (8, 0)}, 4: {20: (11, 0)}, 14: {20: (4, 0), 16: (6, 0), 19: (7, 0), 15: (8, 0)}, 9: {20: (14, 2), 7: (8, 0), 8: (10, 0), 4: (4, 0), 19: (10, 0)}, 8: {20: (6, 0)}, 18: {20: (7, 7), 7: (2, 2), 8: (5, 0)}, 16: {20: (5, 0), 5: (3, 0), 7: (10, 0), 17: (4, 0)}, 17: {20: (4, 0), 14: (7, 0), 13: (1, 0), 5: (3, 0)}, 5: {13: (5, 0)}, 15: {9: (4, 0), 7: (2, 0)}, 12: {11: (6, 0), 7: (5, 0)}, 10: {9: (2, 2), 17: (9, 0), 3: (8, 0)}, 3: {2: (10, 0)}, 7: {10: (9, 2)}, 13: {16: (4, 0), 10: (2, 0)}, 6: {16: (10, 0)}})
Residual graph
defaultdict(<class 'dict'>, {1: {18: 15, 16: 8, 11: 8, 8: 7, 9: 3, 12: 7, 15: 9, 2: 7}, 18: {1: 9, 8: 5}, 11: {20: 6, 4: 8}, 4: {20: 11}, 14: {20: 4, 16: 6, 19: 7, 15: 8}, 9: {20: 12, 7: 8, 8: 10, 4: 4, 19: 10, 10: 2}, 20: {9: 2, 18: 7}, 8: {20: 6}, 7: {18: 2, 10: 7}, 16: {20: 5, 5: 3, 7: 10, 17: 4}, 17: {20: 4, 14: 7, 13: 1, 5: 3}, 5: {13: 5}, 15: {9: 4, 7: 2}, 12: {11: 6, 7: 5}, 10: {17: 9, 3: 8, 7: 2}, 3: {2: 10}, 13: {16: 4, 10: 2}, 6: {16: 10}})
All paths
[[1, 18, 8, 20], [1, 16, 20], [1, 16, 5, 13, 10, 17, 20], [1, 16, 5, 13, 10, 17, 14, 20], [1, 16, 5, 13, 10, 17, 14, 15, 9, 20], [1, 16, 5, 13, 10, 17, 14, 15, 9, 7, 18, 8, 20], [1, 16, 5, 13, 10, 17, 14, 15, 9, 8, 20], [1, 16, 5, 13, 10, 17, 14, 15, 9, 4, 20], [1, 16, 5, 13, 10, 17, 14, 15, 7, 18, 8, 20], [1, 16, 5, 13, 10, 7, 18, 8, 20], [1, 16, 7, 18, 8, 20], [1, 16, 7, 10, 17, 20], [1, 16, 7, 10, 17, 14, 20], [1, 16, 7, 10, 17, 14, 15, 9, 20], [1, 16, 7, 10, 17, 14, 15, 9, 8, 20], [1, 16, 7, 10, 17, 14, 15, 9, 4, 20], [1, 16, 17, 20], [1, 16, 17, 14, 20], [1, 16, 17, 14, 15, 9, 20], [1, 16, 17, 14, 15, 9, 7, 18, 8, 20], [1, 16, 17, 14, 15, 9, 8, 20], [1, 16, 17, 14, 15, 9, 4, 20], [1, 16, 17, 14, 15, 9, 10, 7, 18, 8, 20], [1, 16, 17, 14, 15, 7, 18, 8, 20], [1, 16, 17, 13, 10, 7, 18, 8, 20], [1, 16, 17, 5, 13, 10, 7, 18, 8, 20], [1, 11, 20], [1, 11, 4, 20], [1, 8, 20], [1, 9, 20], [1, 9, 7, 18, 8, 20], [1, 9, 7, 10, 17, 20], [1, 9, 7, 10, 17, 14, 20], [1, 9, 7, 10, 17, 14, 16, 20], [1, 9, 7, 10, 17, 13, 16, 20], [1, 9, 7, 10, 17, 5, 13, 16, 20], [1, 9, 8, 20], [1, 9, 4, 20], [1, 9, 10, 17, 20], [1, 9, 10, 17, 14, 20], [1, 9, 10, 17, 14, 16, 20], [1, 9, 10, 17, 14, 16, 7, 18, 8, 20], [1, 9, 10, 17, 14, 15, 7, 18, 8, 20], [1, 9, 10, 17, 13, 16, 20], [1, 9, 10, 17, 13, 16, 7, 18, 8, 20], [1, 9, 10, 17, 5, 13, 16, 20], [1, 9, 10, 17, 5, 13, 16, 7, 18, 8, 20], [1, 9, 10, 7, 18, 8, 20], [1, 12, 11, 20], [1, 12, 11, 4, 20], [1, 12, 7, 18, 8, 20], [1, 12, 7, 10, 17, 20], [1, 12, 7, 10, 17, 14, 20], [1, 12, 7, 10, 17, 14, 16, 20], [1, 12, 7, 10, 17, 14, 15, 9, 20], [1, 12, 7, 10, 17, 14, 15, 9, 8, 20], [1, 12, 7, 10, 17, 14, 15, 9, 4, 20], [1, 12, 7, 10, 17, 13, 16, 20], [1, 12, 7, 10, 17, 5, 13, 16, 20], [1, 15, 9, 20], [1, 15, 9, 7, 18, 8, 20], [1, 15, 9, 7, 10, 17, 20], [1, 15, 9, 7, 10, 17, 14, 20], [1, 15, 9, 7, 10, 17, 14, 16, 20], [1, 15, 9, 7, 10, 17, 13, 16, 20], [1, 15, 9, 7, 10, 17, 5, 13, 16, 20], [1, 15, 9, 8, 20], [1, 15, 9, 4, 20], [1, 15, 9, 10, 17, 20], [1, 15, 9, 10, 17, 14, 20], [1, 15, 9, 10, 17, 14, 16, 20], [1, 15, 9, 10, 17, 14, 16, 7, 18, 8, 20], [1, 15, 9, 10, 17, 13, 16, 20], [1, 15, 9, 10, 17, 13, 16, 7, 18, 8, 20], [1, 15, 9, 10, 17, 5, 13, 16, 20], [1, 15, 9, 10, 17, 5, 13, 16, 7, 18, 8, 20], [1, 15, 9, 10, 7, 18, 8, 20], [1, 15, 7, 18, 8, 20], [1, 15, 7, 10, 17, 20], [1, 15, 7, 10, 17, 14, 20], [1, 15, 7, 10, 17, 14, 16, 20], [1, 15, 7, 10, 17, 13, 16, 20], [1, 15, 7, 10, 17, 5, 13, 16, 20]]
Capacities: [15, 5, 6]
Bottleneck: 5
defaultdict(<class 'dict'>, {1: {18: (24, 9), 16: (8, 0), 11: (8, 0), 8: (7, 0), 9: (3, 0), 12: (7, 0), 15: (9, 0), 2: (7, 0)}, 11: {20: (6, 0), 4: (8, 0)}, 4: {20: (11, 0)}, 14: {20: (4, 0), 16: (6, 0), 19: (7, 0), 15: (8, 0)}, 9: {20: (14, 2), 7: (8, 0), 8: (10, 0), 4: (4, 0), 19: (10, 0)}, 8: {20: (6, 0)}, 18: {20: (7, 7), 7: (2, 2), 8: (5, 0)}, 16: {20: (5, 0), 5: (3, 0), 7: (10, 0), 17: (4, 0)}, 17: {20: (4, 0), 14: (7, 0), 13: (1, 0), 5: (3, 0)}, 5: {13: (5, 0)}, 15: {9: (4, 0), 7: (2, 0)}, 12: {11: (6, 0), 7: (5, 0)}, 10: {9: (2, 2), 17: (9, 0), 3: (8, 0)}, 3: {2: (10, 0)}, 7: {10: (9, 2)}, 13: {16: (4, 0), 10: (2, 0)}, 6: {16: (10, 0)}})
Initial capacity flow in FE: (24, 9) for source 1 and sink 18
New capacity flow in FE: (24, 9) for source 1 and sink 18
Initial capacity flow in FE: (6, 0) for source 8 and sink 20
New capacity flow in FE: (6, 0) for source 8 and sink 20
Initial capacity flow in FE: (5, 0) for source 18 and sink 8
New capacity flow in FE: (5, 0) for source 18 and sink 8
Actual graph
defaultdict(<class 'dict'>, {1: {18: (24, 14), 16: (8, 0), 11: (8, 0), 8: (7, 0), 9: (3, 0), 12: (7, 0), 15: (9, 0), 2: (7, 0)}, 11: {20: (6, 0), 4: (8, 0)}, 4: {20: (11, 0)}, 14: {20: (4, 0), 16: (6, 0), 19: (7, 0), 15: (8, 0)}, 9: {20: (14, 2), 7: (8, 0), 8: (10, 0), 4: (4, 0), 19: (10, 0)}, 8: {20: (6, 5)}, 18: {20: (7, 7), 7: (2, 2), 8: (5, 5)}, 16: {20: (5, 0), 5: (3, 0), 7: (10, 0), 17: (4, 0)}, 17: {20: (4, 0), 14: (7, 0), 13: (1, 0), 5: (3, 0)}, 5: {13: (5, 0)}, 15: {9: (4, 0), 7: (2, 0)}, 12: {11: (6, 0), 7: (5, 0)}, 10: {9: (2, 2), 17: (9, 0), 3: (8, 0)}, 3: {2: (10, 0)}, 7: {10: (9, 2)}, 13: {16: (4, 0), 10: (2, 0)}, 6: {16: (10, 0)}})
Residual graph
defaultdict(<class 'dict'>, {1: {18: 10, 16: 8, 11: 8, 8: 7, 9: 3, 12: 7, 15: 9, 2: 7}, 18: {1: 14}, 11: {20: 6, 4: 8}, 4: {20: 11}, 14: {20: 4, 16: 6, 19: 7, 15: 8}, 9: {20: 12, 7: 8, 8: 10, 4: 4, 19: 10, 10: 2}, 20: {9: 2, 8: 5, 18: 7}, 8: {20: 1, 18: 5}, 7: {18: 2, 10: 7}, 16: {20: 5, 5: 3, 7: 10, 17: 4}, 17: {20: 4, 14: 7, 13: 1, 5: 3}, 5: {13: 5}, 15: {9: 4, 7: 2}, 12: {11: 6, 7: 5}, 10: {17: 9, 3: 8, 7: 2}, 3: {2: 10}, 13: {16: 4, 10: 2}, 6: {16: 10}})
All paths
[[1, 16, 20], [1, 16, 5, 13, 10, 17, 20], [1, 16, 5, 13, 10, 17, 14, 20], [1, 16, 5, 13, 10, 17, 14, 15, 9, 20], [1, 16, 5, 13, 10, 17, 14, 15, 9, 8, 20], [1, 16, 5, 13, 10, 17, 14, 15, 9, 4, 20], [1, 16, 7, 10, 17, 20], [1, 16, 7, 10, 17, 14, 20], [1, 16, 7, 10, 17, 14, 15, 9, 20], [1, 16, 7, 10, 17, 14, 15, 9, 8, 20], [1, 16, 7, 10, 17, 14, 15, 9, 4, 20], [1, 16, 17, 20], [1, 16, 17, 14, 20], [1, 16, 17, 14, 15, 9, 20], [1, 16, 17, 14, 15, 9, 8, 20], [1, 16, 17, 14, 15, 9, 4, 20], [1, 11, 20], [1, 11, 4, 20], [1, 8, 20], [1, 9, 20], [1, 9, 7, 10, 17, 20], [1, 9, 7, 10, 17, 14, 20], [1, 9, 7, 10, 17, 14, 16, 20], [1, 9, 7, 10, 17, 13, 16, 20], [1, 9, 7, 10, 17, 5, 13, 16, 20], [1, 9, 8, 20], [1, 9, 4, 20], [1, 9, 10, 17, 20], [1, 9, 10, 17, 14, 20], [1, 9, 10, 17, 14, 16, 20], [1, 9, 10, 17, 13, 16, 20], [1, 9, 10, 17, 5, 13, 16, 20], [1, 12, 11, 20], [1, 12, 11, 4, 20], [1, 12, 7, 10, 17, 20], [1, 12, 7, 10, 17, 14, 20], [1, 12, 7, 10, 17, 14, 16, 20], [1, 12, 7, 10, 17, 14, 15, 9, 20], [1, 12, 7, 10, 17, 14, 15, 9, 8, 20], [1, 12, 7, 10, 17, 14, 15, 9, 4, 20], [1, 12, 7, 10, 17, 13, 16, 20], [1, 12, 7, 10, 17, 5, 13, 16, 20], [1, 15, 9, 20], [1, 15, 9, 7, 10, 17, 20], [1, 15, 9, 7, 10, 17, 14, 20], [1, 15, 9, 7, 10, 17, 14, 16, 20], [1, 15, 9, 7, 10, 17, 13, 16, 20], [1, 15, 9, 7, 10, 17, 5, 13, 16, 20], [1, 15, 9, 8, 20], [1, 15, 9, 4, 20], [1, 15, 9, 10, 17, 20], [1, 15, 9, 10, 17, 14, 20], [1, 15, 9, 10, 17, 14, 16, 20], [1, 15, 9, 10, 17, 13, 16, 20], [1, 15, 9, 10, 17, 5, 13, 16, 20], [1, 15, 7, 10, 17, 20], [1, 15, 7, 10, 17, 14, 20], [1, 15, 7, 10, 17, 14, 16, 20], [1, 15, 7, 10, 17, 13, 16, 20], [1, 15, 7, 10, 17, 5, 13, 16, 20]]
Capacities: [8, 5]
Bottleneck: 5
defaultdict(<class 'dict'>, {1: {18: (24, 14), 16: (8, 0), 11: (8, 0), 8: (7, 0), 9: (3, 0), 12: (7, 0), 15: (9, 0), 2: (7, 0)}, 11: {20: (6, 0), 4: (8, 0)}, 4: {20: (11, 0)}, 14: {20: (4, 0), 16: (6, 0), 19: (7, 0), 15: (8, 0)}, 9: {20: (14, 2), 7: (8, 0), 8: (10, 0), 4: (4, 0), 19: (10, 0)}, 8: {20: (6, 5)}, 18: {20: (7, 7), 7: (2, 2), 8: (5, 5)}, 16: {20: (5, 0), 5: (3, 0), 7: (10, 0), 17: (4, 0)}, 17: {20: (4, 0), 14: (7, 0), 13: (1, 0), 5: (3, 0)}, 5: {13: (5, 0)}, 15: {9: (4, 0), 7: (2, 0)}, 12: {11: (6, 0), 7: (5, 0)}, 10: {9: (2, 2), 17: (9, 0), 3: (8, 0)}, 3: {2: (10, 0)}, 7: {10: (9, 2)}, 13: {16: (4, 0), 10: (2, 0)}, 6: {16: (10, 0)}})
Initial capacity flow in FE: (8, 0) for source 1 and sink 16
New capacity flow in FE: (8, 0) for source 1 and sink 16
Initial capacity flow in FE: (5, 0) for source 16 and sink 20
New capacity flow in FE: (5, 0) for source 16 and sink 20
Actual graph
defaultdict(<class 'dict'>, {1: {18: (24, 14), 16: (8, 5), 11: (8, 0), 8: (7, 0), 9: (3, 0), 12: (7, 0), 15: (9, 0), 2: (7, 0)}, 11: {20: (6, 0), 4: (8, 0)}, 4: {20: (11, 0)}, 14: {20: (4, 0), 16: (6, 0), 19: (7, 0), 15: (8, 0)}, 9: {20: (14, 2), 7: (8, 0), 8: (10, 0), 4: (4, 0), 19: (10, 0)}, 8: {20: (6, 5)}, 18: {20: (7, 7), 7: (2, 2), 8: (5, 5)}, 16: {20: (5, 5), 5: (3, 0), 7: (10, 0), 17: (4, 0)}, 17: {20: (4, 0), 14: (7, 0), 13: (1, 0), 5: (3, 0)}, 5: {13: (5, 0)}, 15: {9: (4, 0), 7: (2, 0)}, 12: {11: (6, 0), 7: (5, 0)}, 10: {9: (2, 2), 17: (9, 0), 3: (8, 0)}, 3: {2: (10, 0)}, 7: {10: (9, 2)}, 13: {16: (4, 0), 10: (2, 0)}, 6: {16: (10, 0)}})
Residual graph
defaultdict(<class 'dict'>, {1: {18: 10, 16: 3, 11: 8, 8: 7, 9: 3, 12: 7, 15: 9, 2: 7}, 18: {1: 14}, 16: {1: 5, 5: 3, 7: 10, 17: 4}, 11: {20: 6, 4: 8}, 4: {20: 11}, 14: {20: 4, 16: 6, 19: 7, 15: 8}, 9: {20: 12, 7: 8, 8: 10, 4: 4, 19: 10, 10: 2}, 20: {9: 2, 8: 5, 18: 7, 16: 5}, 8: {20: 1, 18: 5}, 7: {18: 2, 10: 7}, 17: {20: 4, 14: 7, 13: 1, 5: 3}, 5: {13: 5}, 15: {9: 4, 7: 2}, 12: {11: 6, 7: 5}, 10: {17: 9, 3: 8, 7: 2}, 3: {2: 10}, 13: {16: 4, 10: 2}, 6: {16: 10}})
All paths
[[1, 16, 5, 13, 10, 17, 20], [1, 16, 5, 13, 10, 17, 14, 20], [1, 16, 5, 13, 10, 17, 14, 15, 9, 20], [1, 16, 5, 13, 10, 17, 14, 15, 9, 8, 20], [1, 16, 5, 13, 10, 17, 14, 15, 9, 4, 20], [1, 16, 7, 10, 17, 20], [1, 16, 7, 10, 17, 14, 20], [1, 16, 7, 10, 17, 14, 15, 9, 20], [1, 16, 7, 10, 17, 14, 15, 9, 8, 20], [1, 16, 7, 10, 17, 14, 15, 9, 4, 20], [1, 16, 17, 20], [1, 16, 17, 14, 20], [1, 16, 17, 14, 15, 9, 20], [1, 16, 17, 14, 15, 9, 8, 20], [1, 16, 17, 14, 15, 9, 4, 20], [1, 11, 20], [1, 11, 4, 20], [1, 8, 20], [1, 9, 20], [1, 9, 7, 10, 17, 20], [1, 9, 7, 10, 17, 14, 20], [1, 9, 8, 20], [1, 9, 4, 20], [1, 9, 10, 17, 20], [1, 9, 10, 17, 14, 20], [1, 12, 11, 20], [1, 12, 11, 4, 20], [1, 12, 7, 10, 17, 20], [1, 12, 7, 10, 17, 14, 20], [1, 12, 7, 10, 17, 14, 15, 9, 20], [1, 12, 7, 10, 17, 14, 15, 9, 8, 20], [1, 12, 7, 10, 17, 14, 15, 9, 4, 20], [1, 15, 9, 20], [1, 15, 9, 7, 10, 17, 20], [1, 15, 9, 7, 10, 17, 14, 20], [1, 15, 9, 8, 20], [1, 15, 9, 4, 20], [1, 15, 9, 10, 17, 20], [1, 15, 9, 10, 17, 14, 20], [1, 15, 7, 10, 17, 20], [1, 15, 7, 10, 17, 14, 20]]
Capacities: [3, 3, 4, 5, 9, 2]
Bottleneck: 2
defaultdict(<class 'dict'>, {1: {18: (24, 14), 16: (8, 5), 11: (8, 0), 8: (7, 0), 9: (3, 0), 12: (7, 0), 15: (9, 0), 2: (7, 0)}, 11: {20: (6, 0), 4: (8, 0)}, 4: {20: (11, 0)}, 14: {20: (4, 0), 16: (6, 0), 19: (7, 0), 15: (8, 0)}, 9: {20: (14, 2), 7: (8, 0), 8: (10, 0), 4: (4, 0), 19: (10, 0)}, 8: {20: (6, 5)}, 18: {20: (7, 7), 7: (2, 2), 8: (5, 5)}, 16: {20: (5, 5), 5: (3, 0), 7: (10, 0), 17: (4, 0)}, 17: {20: (4, 0), 14: (7, 0), 13: (1, 0), 5: (3, 0)}, 5: {13: (5, 0)}, 15: {9: (4, 0), 7: (2, 0)}, 12: {11: (6, 0), 7: (5, 0)}, 10: {9: (2, 2), 17: (9, 0), 3: (8, 0)}, 3: {2: (10, 0)}, 7: {10: (9, 2)}, 13: {16: (4, 0), 10: (2, 0)}, 6: {16: (10, 0)}})
Initial capacity flow in FE: (8, 5) for source 1 and sink 16
New capacity flow in FE: (8, 5) for source 1 and sink 16
Initial capacity flow in FE: (3, 0) for source 16 and sink 5
New capacity flow in FE: (3, 0) for source 16 and sink 5
Initial capacity flow in FE: (4, 0) for source 17 and sink 20
New capacity flow in FE: (4, 0) for source 17 and sink 20
Initial capacity flow in FE: (5, 0) for source 5 and sink 13
New capacity flow in FE: (5, 0) for source 5 and sink 13
Initial capacity flow in FE: (9, 0) for source 10 and sink 17
New capacity flow in FE: (9, 0) for source 10 and sink 17
Initial capacity flow in FE: (2, 0) for source 13 and sink 10
New capacity flow in FE: (2, 0) for source 13 and sink 10
Actual graph
defaultdict(<class 'dict'>, {1: {18: (24, 14), 16: (8, 7), 11: (8, 0), 8: (7, 0), 9: (3, 0), 12: (7, 0), 15: (9, 0), 2: (7, 0)}, 11: {20: (6, 0), 4: (8, 0)}, 4: {20: (11, 0)}, 14: {20: (4, 0), 16: (6, 0), 19: (7, 0), 15: (8, 0)}, 9: {20: (14, 2), 7: (8, 0), 8: (10, 0), 4: (4, 0), 19: (10, 0)}, 8: {20: (6, 5)}, 18: {20: (7, 7), 7: (2, 2), 8: (5, 5)}, 16: {20: (5, 5), 5: (3, 2), 7: (10, 0), 17: (4, 0)}, 17: {20: (4, 2), 14: (7, 0), 13: (1, 0), 5: (3, 0)}, 5: {13: (5, 2)}, 15: {9: (4, 0), 7: (2, 0)}, 12: {11: (6, 0), 7: (5, 0)}, 10: {9: (2, 2), 17: (9, 2), 3: (8, 0)}, 3: {2: (10, 0)}, 7: {10: (9, 2)}, 13: {16: (4, 0), 10: (2, 2)}, 6: {16: (10, 0)}})
Residual graph
defaultdict(<class 'dict'>, {1: {18: 10, 16: 1, 11: 8, 8: 7, 9: 3, 12: 7, 15: 9, 2: 7}, 18: {1: 14}, 16: {1: 7, 5: 1, 7: 10, 17: 4}, 11: {20: 6, 4: 8}, 4: {20: 11}, 14: {20: 4, 16: 6, 19: 7, 15: 8}, 9: {20: 12, 7: 8, 8: 10, 4: 4, 19: 10, 10: 2}, 20: {9: 2, 8: 5, 18: 7, 16: 5, 17: 2}, 8: {20: 1, 18: 5}, 7: {18: 2, 10: 7}, 5: {16: 2, 13: 3}, 17: {20: 2, 14: 7, 13: 1, 5: 3, 10: 2}, 13: {5: 2, 16: 4}, 15: {9: 4, 7: 2}, 12: {11: 6, 7: 5}, 10: {17: 7, 3: 8, 7: 2, 13: 2}, 3: {2: 10}, 6: {16: 10}})
All paths
[[1, 16, 7, 10, 17, 20], [1, 16, 7, 10, 17, 14, 20], [1, 16, 7, 10, 17, 14, 15, 9, 20], [1, 16, 7, 10, 17, 14, 15, 9, 8, 20], [1, 16, 7, 10, 17, 14, 15, 9, 4, 20], [1, 16, 17, 20], [1, 16, 17, 14, 20], [1, 16, 17, 14, 15, 9, 20], [1, 16, 17, 14, 15, 9, 8, 20], [1, 16, 17, 14, 15, 9, 4, 20], [1, 11, 20], [1, 11, 4, 20], [1, 8, 20], [1, 9, 20], [1, 9, 7, 10, 17, 20], [1, 9, 7, 10, 17, 14, 20], [1, 9, 7, 10, 13, 5, 16, 17, 20], [1, 9, 7, 10, 13, 5, 16, 17, 14, 20], [1, 9, 7, 10, 13, 16, 17, 20], [1, 9, 7, 10, 13, 16, 17, 14, 20], [1, 9, 8, 20], [1, 9, 4, 20], [1, 9, 10, 17, 20], [1, 9, 10, 17, 14, 20], [1, 9, 10, 13, 5, 16, 17, 20], [1, 9, 10, 13, 5, 16, 17, 14, 20], [1, 9, 10, 13, 16, 17, 20], [1, 9, 10, 13, 16, 17, 14, 20], [1, 12, 11, 20], [1, 12, 11, 4, 20], [1, 12, 7, 10, 17, 20], [1, 12, 7, 10, 17, 14, 20], [1, 12, 7, 10, 17, 14, 15, 9, 20], [1, 12, 7, 10, 17, 14, 15, 9, 8, 20], [1, 12, 7, 10, 17, 14, 15, 9, 4, 20], [1, 12, 7, 10, 13, 5, 16, 17, 20], [1, 12, 7, 10, 13, 5, 16, 17, 14, 20], [1, 12, 7, 10, 13, 5, 16, 17, 14, 15, 9, 20], [1, 12, 7, 10, 13, 5, 16, 17, 14, 15, 9, 8, 20], [1, 12, 7, 10, 13, 5, 16, 17, 14, 15, 9, 4, 20], [1, 12, 7, 10, 13, 16, 17, 20], [1, 12, 7, 10, 13, 16, 17, 14, 20], [1, 12, 7, 10, 13, 16, 17, 14, 15, 9, 20], [1, 12, 7, 10, 13, 16, 17, 14, 15, 9, 8, 20], [1, 12, 7, 10, 13, 16, 17, 14, 15, 9, 4, 20], [1, 15, 9, 20], [1, 15, 9, 7, 10, 17, 20], [1, 15, 9, 7, 10, 17, 14, 20], [1, 15, 9, 7, 10, 13, 5, 16, 17, 20], [1, 15, 9, 7, 10, 13, 5, 16, 17, 14, 20], [1, 15, 9, 7, 10, 13, 16, 17, 20], [1, 15, 9, 7, 10, 13, 16, 17, 14, 20], [1, 15, 9, 8, 20], [1, 15, 9, 4, 20], [1, 15, 9, 10, 17, 20], [1, 15, 9, 10, 17, 14, 20], [1, 15, 9, 10, 13, 5, 16, 17, 20], [1, 15, 9, 10, 13, 5, 16, 17, 14, 20], [1, 15, 9, 10, 13, 16, 17, 20], [1, 15, 9, 10, 13, 16, 17, 14, 20], [1, 15, 7, 10, 17, 20], [1, 15, 7, 10, 17, 14, 20], [1, 15, 7, 10, 13, 5, 16, 17, 20], [1, 15, 7, 10, 13, 5, 16, 17, 14, 20], [1, 15, 7, 10, 13, 16, 17, 20], [1, 15, 7, 10, 13, 16, 17, 14, 20]]
Capacities: [1, 10, 7, 2, 7]
Bottleneck: 1
defaultdict(<class 'dict'>, {1: {18: (24, 14), 16: (8, 7), 11: (8, 0), 8: (7, 0), 9: (3, 0), 12: (7, 0), 15: (9, 0), 2: (7, 0)}, 11: {20: (6, 0), 4: (8, 0)}, 4: {20: (11, 0)}, 14: {20: (4, 0), 16: (6, 0), 19: (7, 0), 15: (8, 0)}, 9: {20: (14, 2), 7: (8, 0), 8: (10, 0), 4: (4, 0), 19: (10, 0)}, 8: {20: (6, 5)}, 18: {20: (7, 7), 7: (2, 2), 8: (5, 5)}, 16: {20: (5, 5), 5: (3, 2), 7: (10, 0), 17: (4, 0)}, 17: {20: (4, 2), 14: (7, 0), 13: (1, 0), 5: (3, 0)}, 5: {13: (5, 2)}, 15: {9: (4, 0), 7: (2, 0)}, 12: {11: (6, 0), 7: (5, 0)}, 10: {9: (2, 2), 17: (9, 2), 3: (8, 0)}, 3: {2: (10, 0)}, 7: {10: (9, 2)}, 13: {16: (4, 0), 10: (2, 2)}, 6: {16: (10, 0)}})
Initial capacity flow in FE: (8, 7) for source 1 and sink 16
New capacity flow in FE: (8, 7) for source 1 and sink 16
Initial capacity flow in FE: (10, 0) for source 16 and sink 7
New capacity flow in FE: (10, 0) for source 16 and sink 7
Initial capacity flow in FE: (4, 2) for source 17 and sink 20
New capacity flow in FE: (4, 2) for source 17 and sink 20
Initial capacity flow in FE: (9, 2) for source 10 and sink 17
New capacity flow in FE: (9, 2) for source 10 and sink 17
Initial capacity flow in FE: (9, 2) for source 7 and sink 10
New capacity flow in FE: (9, 2) for source 7 and sink 10
Actual graph
defaultdict(<class 'dict'>, {1: {18: (24, 14), 16: (8, 8), 11: (8, 0), 8: (7, 0), 9: (3, 0), 12: (7, 0), 15: (9, 0), 2: (7, 0)}, 11: {20: (6, 0), 4: (8, 0)}, 4: {20: (11, 0)}, 14: {20: (4, 0), 16: (6, 0), 19: (7, 0), 15: (8, 0)}, 9: {20: (14, 2), 7: (8, 0), 8: (10, 0), 4: (4, 0), 19: (10, 0)}, 8: {20: (6, 5)}, 18: {20: (7, 7), 7: (2, 2), 8: (5, 5)}, 16: {20: (5, 5), 5: (3, 2), 7: (10, 1), 17: (4, 0)}, 17: {20: (4, 3), 14: (7, 0), 13: (1, 0), 5: (3, 0)}, 5: {13: (5, 2)}, 15: {9: (4, 0), 7: (2, 0)}, 12: {11: (6, 0), 7: (5, 0)}, 10: {9: (2, 2), 17: (9, 3), 3: (8, 0)}, 3: {2: (10, 0)}, 7: {10: (9, 3)}, 13: {16: (4, 0), 10: (2, 2)}, 6: {16: (10, 0)}})
Residual graph
defaultdict(<class 'dict'>, {1: {18: 10, 11: 8, 8: 7, 9: 3, 12: 7, 15: 9, 2: 7}, 18: {1: 14}, 16: {1: 8, 5: 1, 7: 9, 17: 4}, 11: {20: 6, 4: 8}, 4: {20: 11}, 14: {20: 4, 16: 6, 19: 7, 15: 8}, 9: {20: 12, 7: 8, 8: 10, 4: 4, 19: 10, 10: 2}, 20: {9: 2, 8: 5, 18: 7, 16: 5, 17: 3}, 8: {20: 1, 18: 5}, 7: {18: 2, 16: 1, 10: 6}, 5: {16: 2, 13: 3}, 17: {20: 1, 14: 7, 13: 1, 5: 3, 10: 3}, 13: {5: 2, 16: 4}, 15: {9: 4, 7: 2}, 12: {11: 6, 7: 5}, 10: {17: 6, 3: 8, 7: 3, 13: 2}, 3: {2: 10}, 6: {16: 10}})
All paths
[[1, 11, 20], [1, 11, 4, 20], [1, 8, 20], [1, 9, 20], [1, 9, 7, 16, 17, 20], [1, 9, 7, 16, 17, 14, 20], [1, 9, 7, 10, 17, 20], [1, 9, 7, 10, 17, 14, 20], [1, 9, 7, 10, 13, 5, 16, 17, 20], [1, 9, 7, 10, 13, 5, 16, 17, 14, 20], [1, 9, 7, 10, 13, 16, 17, 20], [1, 9, 7, 10, 13, 16, 17, 14, 20], [1, 9, 8, 20], [1, 9, 4, 20], [1, 9, 10, 17, 20], [1, 9, 10, 17, 14, 20], [1, 9, 10, 7, 16, 17, 20], [1, 9, 10, 7, 16, 17, 14, 20], [1, 9, 10, 13, 5, 16, 17, 20], [1, 9, 10, 13, 5, 16, 17, 14, 20], [1, 9, 10, 13, 16, 17, 20], [1, 9, 10, 13, 16, 17, 14, 20], [1, 12, 11, 20], [1, 12, 11, 4, 20], [1, 12, 7, 16, 17, 20], [1, 12, 7, 16, 17, 14, 20], [1, 12, 7, 16, 17, 14, 15, 9, 20], [1, 12, 7, 16, 17, 14, 15, 9, 8, 20], [1, 12, 7, 16, 17, 14, 15, 9, 4, 20], [1, 12, 7, 10, 17, 20], [1, 12, 7, 10, 17, 14, 20], [1, 12, 7, 10, 17, 14, 15, 9, 20], [1, 12, 7, 10, 17, 14, 15, 9, 8, 20], [1, 12, 7, 10, 17, 14, 15, 9, 4, 20], [1, 12, 7, 10, 13, 5, 16, 17, 20], [1, 12, 7, 10, 13, 5, 16, 17, 14, 20], [1, 12, 7, 10, 13, 5, 16, 17, 14, 15, 9, 20], [1, 12, 7, 10, 13, 5, 16, 17, 14, 15, 9, 8, 20], [1, 12, 7, 10, 13, 5, 16, 17, 14, 15, 9, 4, 20], [1, 12, 7, 10, 13, 16, 17, 20], [1, 12, 7, 10, 13, 16, 17, 14, 20], [1, 12, 7, 10, 13, 16, 17, 14, 15, 9, 20], [1, 12, 7, 10, 13, 16, 17, 14, 15, 9, 8, 20], [1, 12, 7, 10, 13, 16, 17, 14, 15, 9, 4, 20], [1, 15, 9, 20], [1, 15, 9, 7, 16, 17, 20], [1, 15, 9, 7, 16, 17, 14, 20], [1, 15, 9, 7, 10, 17, 20], [1, 15, 9, 7, 10, 17, 14, 20], [1, 15, 9, 7, 10, 13, 5, 16, 17, 20], [1, 15, 9, 7, 10, 13, 5, 16, 17, 14, 20], [1, 15, 9, 7, 10, 13, 16, 17, 20], [1, 15, 9, 7, 10, 13, 16, 17, 14, 20], [1, 15, 9, 8, 20], [1, 15, 9, 4, 20], [1, 15, 9, 10, 17, 20], [1, 15, 9, 10, 17, 14, 20], [1, 15, 9, 10, 7, 16, 17, 20], [1, 15, 9, 10, 7, 16, 17, 14, 20], [1, 15, 9, 10, 13, 5, 16, 17, 20], [1, 15, 9, 10, 13, 5, 16, 17, 14, 20], [1, 15, 9, 10, 13, 16, 17, 20], [1, 15, 9, 10, 13, 16, 17, 14, 20], [1, 15, 7, 16, 17, 20], [1, 15, 7, 16, 17, 14, 20], [1, 15, 7, 10, 17, 20], [1, 15, 7, 10, 17, 14, 20], [1, 15, 7, 10, 13, 5, 16, 17, 20], [1, 15, 7, 10, 13, 5, 16, 17, 14, 20], [1, 15, 7, 10, 13, 16, 17, 20], [1, 15, 7, 10, 13, 16, 17, 14, 20]]
Capacities: [8, 6]
Bottleneck: 6
defaultdict(<class 'dict'>, {1: {18: (24, 14), 16: (8, 8), 11: (8, 0), 8: (7, 0), 9: (3, 0), 12: (7, 0), 15: (9, 0), 2: (7, 0)}, 11: {20: (6, 0), 4: (8, 0)}, 4: {20: (11, 0)}, 14: {20: (4, 0), 16: (6, 0), 19: (7, 0), 15: (8, 0)}, 9: {20: (14, 2), 7: (8, 0), 8: (10, 0), 4: (4, 0), 19: (10, 0)}, 8: {20: (6, 5)}, 18: {20: (7, 7), 7: (2, 2), 8: (5, 5)}, 16: {20: (5, 5), 5: (3, 2), 7: (10, 1), 17: (4, 0)}, 17: {20: (4, 3), 14: (7, 0), 13: (1, 0), 5: (3, 0)}, 5: {13: (5, 2)}, 15: {9: (4, 0), 7: (2, 0)}, 12: {11: (6, 0), 7: (5, 0)}, 10: {9: (2, 2), 17: (9, 3), 3: (8, 0)}, 3: {2: (10, 0)}, 7: {10: (9, 3)}, 13: {16: (4, 0), 10: (2, 2)}, 6: {16: (10, 0)}})
Initial capacity flow in FE: (8, 0) for source 1 and sink 11
New capacity flow in FE: (8, 0) for source 1 and sink 11
Initial capacity flow in FE: (6, 0) for source 11 and sink 20
New capacity flow in FE: (6, 0) for source 11 and sink 20
Actual graph
defaultdict(<class 'dict'>, {1: {18: (24, 14), 16: (8, 8), 11: (8, 6), 8: (7, 0), 9: (3, 0), 12: (7, 0), 15: (9, 0), 2: (7, 0)}, 11: {20: (6, 6), 4: (8, 0)}, 4: {20: (11, 0)}, 14: {20: (4, 0), 16: (6, 0), 19: (7, 0), 15: (8, 0)}, 9: {20: (14, 2), 7: (8, 0), 8: (10, 0), 4: (4, 0), 19: (10, 0)}, 8: {20: (6, 5)}, 18: {20: (7, 7), 7: (2, 2), 8: (5, 5)}, 16: {20: (5, 5), 5: (3, 2), 7: (10, 1), 17: (4, 0)}, 17: {20: (4, 3), 14: (7, 0), 13: (1, 0), 5: (3, 0)}, 5: {13: (5, 2)}, 15: {9: (4, 0), 7: (2, 0)}, 12: {11: (6, 0), 7: (5, 0)}, 10: {9: (2, 2), 17: (9, 3), 3: (8, 0)}, 3: {2: (10, 0)}, 7: {10: (9, 3)}, 13: {16: (4, 0), 10: (2, 2)}, 6: {16: (10, 0)}})
Residual graph
defaultdict(<class 'dict'>, {1: {18: 10, 11: 2, 8: 7, 9: 3, 12: 7, 15: 9, 2: 7}, 18: {1: 14}, 16: {1: 8, 5: 1, 7: 9, 17: 4}, 11: {1: 6, 4: 8}, 20: {11: 6, 9: 2, 8: 5, 18: 7, 16: 5, 17: 3}, 4: {20: 11}, 14: {20: 4, 16: 6, 19: 7, 15: 8}, 9: {20: 12, 7: 8, 8: 10, 4: 4, 19: 10, 10: 2}, 8: {20: 1, 18: 5}, 7: {18: 2, 16: 1, 10: 6}, 5: {16: 2, 13: 3}, 17: {20: 1, 14: 7, 13: 1, 5: 3, 10: 3}, 13: {5: 2, 16: 4}, 15: {9: 4, 7: 2}, 12: {11: 6, 7: 5}, 10: {17: 6, 3: 8, 7: 3, 13: 2}, 3: {2: 10}, 6: {16: 10}})
All paths
[[1, 11, 4, 20], [1, 8, 20], [1, 9, 20], [1, 9, 7, 16, 17, 20], [1, 9, 7, 16, 17, 14, 20], [1, 9, 7, 10, 17, 20], [1, 9, 7, 10, 17, 14, 20], [1, 9, 7, 10, 13, 5, 16, 17, 20], [1, 9, 7, 10, 13, 5, 16, 17, 14, 20], [1, 9, 7, 10, 13, 16, 17, 20], [1, 9, 7, 10, 13, 16, 17, 14, 20], [1, 9, 8, 20], [1, 9, 4, 20], [1, 9, 10, 17, 20], [1, 9, 10, 17, 14, 20], [1, 9, 10, 7, 16, 17, 20], [1, 9, 10, 7, 16, 17, 14, 20], [1, 9, 10, 13, 5, 16, 17, 20], [1, 9, 10, 13, 5, 16, 17, 14, 20], [1, 9, 10, 13, 16, 17, 20], [1, 9, 10, 13, 16, 17, 14, 20], [1, 12, 11, 4, 20], [1, 12, 7, 16, 17, 20], [1, 12, 7, 16, 17, 14, 20], [1, 12, 7, 16, 17, 14, 15, 9, 20], [1, 12, 7, 16, 17, 14, 15, 9, 8, 20], [1, 12, 7, 16, 17, 14, 15, 9, 4, 20], [1, 12, 7, 10, 17, 20], [1, 12, 7, 10, 17, 14, 20], [1, 12, 7, 10, 17, 14, 15, 9, 20], [1, 12, 7, 10, 17, 14, 15, 9, 8, 20], [1, 12, 7, 10, 17, 14, 15, 9, 4, 20], [1, 12, 7, 10, 13, 5, 16, 17, 20], [1, 12, 7, 10, 13, 5, 16, 17, 14, 20], [1, 12, 7, 10, 13, 5, 16, 17, 14, 15, 9, 20], [1, 12, 7, 10, 13, 5, 16, 17, 14, 15, 9, 8, 20], [1, 12, 7, 10, 13, 5, 16, 17, 14, 15, 9, 4, 20], [1, 12, 7, 10, 13, 16, 17, 20], [1, 12, 7, 10, 13, 16, 17, 14, 20], [1, 12, 7, 10, 13, 16, 17, 14, 15, 9, 20], [1, 12, 7, 10, 13, 16, 17, 14, 15, 9, 8, 20], [1, 12, 7, 10, 13, 16, 17, 14, 15, 9, 4, 20], [1, 15, 9, 20], [1, 15, 9, 7, 16, 17, 20], [1, 15, 9, 7, 16, 17, 14, 20], [1, 15, 9, 7, 10, 17, 20], [1, 15, 9, 7, 10, 17, 14, 20], [1, 15, 9, 7, 10, 13, 5, 16, 17, 20], [1, 15, 9, 7, 10, 13, 5, 16, 17, 14, 20], [1, 15, 9, 7, 10, 13, 16, 17, 20], [1, 15, 9, 7, 10, 13, 16, 17, 14, 20], [1, 15, 9, 8, 20], [1, 15, 9, 4, 20], [1, 15, 9, 10, 17, 20], [1, 15, 9, 10, 17, 14, 20], [1, 15, 9, 10, 7, 16, 17, 20], [1, 15, 9, 10, 7, 16, 17, 14, 20], [1, 15, 9, 10, 13, 5, 16, 17, 20], [1, 15, 9, 10, 13, 5, 16, 17, 14, 20], [1, 15, 9, 10, 13, 16, 17, 20], [1, 15, 9, 10, 13, 16, 17, 14, 20], [1, 15, 7, 16, 17, 20], [1, 15, 7, 16, 17, 14, 20], [1, 15, 7, 10, 17, 20], [1, 15, 7, 10, 17, 14, 20], [1, 15, 7, 10, 13, 5, 16, 17, 20], [1, 15, 7, 10, 13, 5, 16, 17, 14, 20], [1, 15, 7, 10, 13, 16, 17, 20], [1, 15, 7, 10, 13, 16, 17, 14, 20]]
Capacities: [2, 8, 11]
Bottleneck: 2
defaultdict(<class 'dict'>, {1: {18: (24, 14), 16: (8, 8), 11: (8, 6), 8: (7, 0), 9: (3, 0), 12: (7, 0), 15: (9, 0), 2: (7, 0)}, 11: {20: (6, 6), 4: (8, 0)}, 4: {20: (11, 0)}, 14: {20: (4, 0), 16: (6, 0), 19: (7, 0), 15: (8, 0)}, 9: {20: (14, 2), 7: (8, 0), 8: (10, 0), 4: (4, 0), 19: (10, 0)}, 8: {20: (6, 5)}, 18: {20: (7, 7), 7: (2, 2), 8: (5, 5)}, 16: {20: (5, 5), 5: (3, 2), 7: (10, 1), 17: (4, 0)}, 17: {20: (4, 3), 14: (7, 0), 13: (1, 0), 5: (3, 0)}, 5: {13: (5, 2)}, 15: {9: (4, 0), 7: (2, 0)}, 12: {11: (6, 0), 7: (5, 0)}, 10: {9: (2, 2), 17: (9, 3), 3: (8, 0)}, 3: {2: (10, 0)}, 7: {10: (9, 3)}, 13: {16: (4, 0), 10: (2, 2)}, 6: {16: (10, 0)}})
Initial capacity flow in FE: (8, 6) for source 1 and sink 11
New capacity flow in FE: (8, 6) for source 1 and sink 11
Initial capacity flow in FE: (8, 0) for source 11 and sink 4
New capacity flow in FE: (8, 0) for source 11 and sink 4
Initial capacity flow in FE: (11, 0) for source 4 and sink 20
New capacity flow in FE: (11, 0) for source 4 and sink 20
Actual graph
defaultdict(<class 'dict'>, {1: {18: (24, 14), 16: (8, 8), 11: (8, 8), 8: (7, 0), 9: (3, 0), 12: (7, 0), 15: (9, 0), 2: (7, 0)}, 11: {20: (6, 6), 4: (8, 2)}, 4: {20: (11, 2)}, 14: {20: (4, 0), 16: (6, 0), 19: (7, 0), 15: (8, 0)}, 9: {20: (14, 2), 7: (8, 0), 8: (10, 0), 4: (4, 0), 19: (10, 0)}, 8: {20: (6, 5)}, 18: {20: (7, 7), 7: (2, 2), 8: (5, 5)}, 16: {20: (5, 5), 5: (3, 2), 7: (10, 1), 17: (4, 0)}, 17: {20: (4, 3), 14: (7, 0), 13: (1, 0), 5: (3, 0)}, 5: {13: (5, 2)}, 15: {9: (4, 0), 7: (2, 0)}, 12: {11: (6, 0), 7: (5, 0)}, 10: {9: (2, 2), 17: (9, 3), 3: (8, 0)}, 3: {2: (10, 0)}, 7: {10: (9, 3)}, 13: {16: (4, 0), 10: (2, 2)}, 6: {16: (10, 0)}})
Residual graph
defaultdict(<class 'dict'>, {1: {18: 10, 8: 7, 9: 3, 12: 7, 15: 9, 2: 7}, 18: {1: 14}, 16: {1: 8, 5: 1, 7: 9, 17: 4}, 11: {1: 8, 4: 6}, 20: {11: 6, 4: 2, 9: 2, 8: 5, 18: 7, 16: 5, 17: 3}, 4: {11: 2, 20: 9}, 14: {20: 4, 16: 6, 19: 7, 15: 8}, 9: {20: 12, 7: 8, 8: 10, 4: 4, 19: 10, 10: 2}, 8: {20: 1, 18: 5}, 7: {18: 2, 16: 1, 10: 6}, 5: {16: 2, 13: 3}, 17: {20: 1, 14: 7, 13: 1, 5: 3, 10: 3}, 13: {5: 2, 16: 4}, 15: {9: 4, 7: 2}, 12: {11: 6, 7: 5}, 10: {17: 6, 3: 8, 7: 3, 13: 2}, 3: {2: 10}, 6: {16: 10}})
All paths
[[1, 8, 20], [1, 9, 20], [1, 9, 7, 16, 17, 20], [1, 9, 7, 16, 17, 14, 20], [1, 9, 7, 10, 17, 20], [1, 9, 7, 10, 17, 14, 20], [1, 9, 7, 10, 13, 5, 16, 17, 20], [1, 9, 7, 10, 13, 5, 16, 17, 14, 20], [1, 9, 7, 10, 13, 16, 17, 20], [1, 9, 7, 10, 13, 16, 17, 14, 20], [1, 9, 8, 20], [1, 9, 4, 20], [1, 9, 10, 17, 20], [1, 9, 10, 17, 14, 20], [1, 9, 10, 7, 16, 17, 20], [1, 9, 10, 7, 16, 17, 14, 20], [1, 9, 10, 13, 5, 16, 17, 20], [1, 9, 10, 13, 5, 16, 17, 14, 20], [1, 9, 10, 13, 16, 17, 20], [1, 9, 10, 13, 16, 17, 14, 20], [1, 12, 11, 4, 20], [1, 12, 7, 16, 17, 20], [1, 12, 7, 16, 17, 14, 20], [1, 12, 7, 16, 17, 14, 15, 9, 20], [1, 12, 7, 16, 17, 14, 15, 9, 8, 20], [1, 12, 7, 16, 17, 14, 15, 9, 4, 20], [1, 12, 7, 10, 17, 20], [1, 12, 7, 10, 17, 14, 20], [1, 12, 7, 10, 17, 14, 15, 9, 20], [1, 12, 7, 10, 17, 14, 15, 9, 8, 20], [1, 12, 7, 10, 17, 14, 15, 9, 4, 20], [1, 12, 7, 10, 13, 5, 16, 17, 20], [1, 12, 7, 10, 13, 5, 16, 17, 14, 20], [1, 12, 7, 10, 13, 5, 16, 17, 14, 15, 9, 20], [1, 12, 7, 10, 13, 5, 16, 17, 14, 15, 9, 8, 20], [1, 12, 7, 10, 13, 5, 16, 17, 14, 15, 9, 4, 20], [1, 12, 7, 10, 13, 16, 17, 20], [1, 12, 7, 10, 13, 16, 17, 14, 20], [1, 12, 7, 10, 13, 16, 17, 14, 15, 9, 20], [1, 12, 7, 10, 13, 16, 17, 14, 15, 9, 8, 20], [1, 12, 7, 10, 13, 16, 17, 14, 15, 9, 4, 20], [1, 15, 9, 20], [1, 15, 9, 7, 16, 17, 20], [1, 15, 9, 7, 16, 17, 14, 20], [1, 15, 9, 7, 10, 17, 20], [1, 15, 9, 7, 10, 17, 14, 20], [1, 15, 9, 7, 10, 13, 5, 16, 17, 20], [1, 15, 9, 7, 10, 13, 5, 16, 17, 14, 20], [1, 15, 9, 7, 10, 13, 16, 17, 20], [1, 15, 9, 7, 10, 13, 16, 17, 14, 20], [1, 15, 9, 8, 20], [1, 15, 9, 4, 20], [1, 15, 9, 10, 17, 20], [1, 15, 9, 10, 17, 14, 20], [1, 15, 9, 10, 7, 16, 17, 20], [1, 15, 9, 10, 7, 16, 17, 14, 20], [1, 15, 9, 10, 13, 5, 16, 17, 20], [1, 15, 9, 10, 13, 5, 16, 17, 14, 20], [1, 15, 9, 10, 13, 16, 17, 20], [1, 15, 9, 10, 13, 16, 17, 14, 20], [1, 15, 7, 16, 17, 20], [1, 15, 7, 16, 17, 14, 20], [1, 15, 7, 10, 17, 20], [1, 15, 7, 10, 17, 14, 20], [1, 15, 7, 10, 13, 5, 16, 17, 20], [1, 15, 7, 10, 13, 5, 16, 17, 14, 20], [1, 15, 7, 10, 13, 16, 17, 20], [1, 15, 7, 10, 13, 16, 17, 14, 20]]
Capacities: [7, 1]
Bottleneck: 1
defaultdict(<class 'dict'>, {1: {18: (24, 14), 16: (8, 8), 11: (8, 8), 8: (7, 0), 9: (3, 0), 12: (7, 0), 15: (9, 0), 2: (7, 0)}, 11: {20: (6, 6), 4: (8, 2)}, 4: {20: (11, 2)}, 14: {20: (4, 0), 16: (6, 0), 19: (7, 0), 15: (8, 0)}, 9: {20: (14, 2), 7: (8, 0), 8: (10, 0), 4: (4, 0), 19: (10, 0)}, 8: {20: (6, 5)}, 18: {20: (7, 7), 7: (2, 2), 8: (5, 5)}, 16: {20: (5, 5), 5: (3, 2), 7: (10, 1), 17: (4, 0)}, 17: {20: (4, 3), 14: (7, 0), 13: (1, 0), 5: (3, 0)}, 5: {13: (5, 2)}, 15: {9: (4, 0), 7: (2, 0)}, 12: {11: (6, 0), 7: (5, 0)}, 10: {9: (2, 2), 17: (9, 3), 3: (8, 0)}, 3: {2: (10, 0)}, 7: {10: (9, 3)}, 13: {16: (4, 0), 10: (2, 2)}, 6: {16: (10, 0)}})
Initial capacity flow in FE: (7, 0) for source 1 and sink 8
New capacity flow in FE: (7, 0) for source 1 and sink 8
Initial capacity flow in FE: (6, 5) for source 8 and sink 20
New capacity flow in FE: (6, 5) for source 8 and sink 20
Actual graph
defaultdict(<class 'dict'>, {1: {18: (24, 14), 16: (8, 8), 11: (8, 8), 8: (7, 1), 9: (3, 0), 12: (7, 0), 15: (9, 0), 2: (7, 0)}, 11: {20: (6, 6), 4: (8, 2)}, 4: {20: (11, 2)}, 14: {20: (4, 0), 16: (6, 0), 19: (7, 0), 15: (8, 0)}, 9: {20: (14, 2), 7: (8, 0), 8: (10, 0), 4: (4, 0), 19: (10, 0)}, 8: {20: (6, 6)}, 18: {20: (7, 7), 7: (2, 2), 8: (5, 5)}, 16: {20: (5, 5), 5: (3, 2), 7: (10, 1), 17: (4, 0)}, 17: {20: (4, 3), 14: (7, 0), 13: (1, 0), 5: (3, 0)}, 5: {13: (5, 2)}, 15: {9: (4, 0), 7: (2, 0)}, 12: {11: (6, 0), 7: (5, 0)}, 10: {9: (2, 2), 17: (9, 3), 3: (8, 0)}, 3: {2: (10, 0)}, 7: {10: (9, 3)}, 13: {16: (4, 0), 10: (2, 2)}, 6: {16: (10, 0)}})
Residual graph
defaultdict(<class 'dict'>, {1: {18: 10, 8: 6, 9: 3, 12: 7, 15: 9, 2: 7}, 18: {1: 14}, 16: {1: 8, 5: 1, 7: 9, 17: 4}, 11: {1: 8, 4: 6}, 8: {1: 1, 18: 5}, 20: {11: 6, 4: 2, 9: 2, 8: 6, 18: 7, 16: 5, 17: 3}, 4: {11: 2, 20: 9}, 14: {20: 4, 16: 6, 19: 7, 15: 8}, 9: {20: 12, 7: 8, 8: 10, 4: 4, 19: 10, 10: 2}, 7: {18: 2, 16: 1, 10: 6}, 5: {16: 2, 13: 3}, 17: {20: 1, 14: 7, 13: 1, 5: 3, 10: 3}, 13: {5: 2, 16: 4}, 15: {9: 4, 7: 2}, 12: {11: 6, 7: 5}, 10: {17: 6, 3: 8, 7: 3, 13: 2}, 3: {2: 10}, 6: {16: 10}})
All paths
[[1, 9, 20], [1, 9, 7, 16, 17, 20], [1, 9, 7, 16, 17, 14, 20], [1, 9, 7, 10, 17, 20], [1, 9, 7, 10, 17, 14, 20], [1, 9, 7, 10, 13, 5, 16, 17, 20], [1, 9, 7, 10, 13, 5, 16, 17, 14, 20], [1, 9, 7, 10, 13, 16, 17, 20], [1, 9, 7, 10, 13, 16, 17, 14, 20], [1, 9, 4, 20], [1, 9, 10, 17, 20], [1, 9, 10, 17, 14, 20], [1, 9, 10, 7, 16, 17, 20], [1, 9, 10, 7, 16, 17, 14, 20], [1, 9, 10, 13, 5, 16, 17, 20], [1, 9, 10, 13, 5, 16, 17, 14, 20], [1, 9, 10, 13, 16, 17, 20], [1, 9, 10, 13, 16, 17, 14, 20], [1, 12, 11, 4, 20], [1, 12, 7, 16, 17, 20], [1, 12, 7, 16, 17, 14, 20], [1, 12, 7, 16, 17, 14, 15, 9, 20], [1, 12, 7, 16, 17, 14, 15, 9, 4, 20], [1, 12, 7, 10, 17, 20], [1, 12, 7, 10, 17, 14, 20], [1, 12, 7, 10, 17, 14, 15, 9, 20], [1, 12, 7, 10, 17, 14, 15, 9, 4, 20], [1, 12, 7, 10, 13, 5, 16, 17, 20], [1, 12, 7, 10, 13, 5, 16, 17, 14, 20], [1, 12, 7, 10, 13, 5, 16, 17, 14, 15, 9, 20], [1, 12, 7, 10, 13, 5, 16, 17, 14, 15, 9, 4, 20], [1, 12, 7, 10, 13, 16, 17, 20], [1, 12, 7, 10, 13, 16, 17, 14, 20], [1, 12, 7, 10, 13, 16, 17, 14, 15, 9, 20], [1, 12, 7, 10, 13, 16, 17, 14, 15, 9, 4, 20], [1, 15, 9, 20], [1, 15, 9, 7, 16, 17, 20], [1, 15, 9, 7, 16, 17, 14, 20], [1, 15, 9, 7, 10, 17, 20], [1, 15, 9, 7, 10, 17, 14, 20], [1, 15, 9, 7, 10, 13, 5, 16, 17, 20], [1, 15, 9, 7, 10, 13, 5, 16, 17, 14, 20], [1, 15, 9, 7, 10, 13, 16, 17, 20], [1, 15, 9, 7, 10, 13, 16, 17, 14, 20], [1, 15, 9, 4, 20], [1, 15, 9, 10, 17, 20], [1, 15, 9, 10, 17, 14, 20], [1, 15, 9, 10, 7, 16, 17, 20], [1, 15, 9, 10, 7, 16, 17, 14, 20], [1, 15, 9, 10, 13, 5, 16, 17, 20], [1, 15, 9, 10, 13, 5, 16, 17, 14, 20], [1, 15, 9, 10, 13, 16, 17, 20], [1, 15, 9, 10, 13, 16, 17, 14, 20], [1, 15, 7, 16, 17, 20], [1, 15, 7, 16, 17, 14, 20], [1, 15, 7, 10, 17, 20], [1, 15, 7, 10, 17, 14, 20], [1, 15, 7, 10, 13, 5, 16, 17, 20], [1, 15, 7, 10, 13, 5, 16, 17, 14, 20], [1, 15, 7, 10, 13, 16, 17, 20], [1, 15, 7, 10, 13, 16, 17, 14, 20]]
Capacities: [3, 12]
Bottleneck: 3
defaultdict(<class 'dict'>, {1: {18: (24, 14), 16: (8, 8), 11: (8, 8), 8: (7, 1), 9: (3, 0), 12: (7, 0), 15: (9, 0), 2: (7, 0)}, 11: {20: (6, 6), 4: (8, 2)}, 4: {20: (11, 2)}, 14: {20: (4, 0), 16: (6, 0), 19: (7, 0), 15: (8, 0)}, 9: {20: (14, 2), 7: (8, 0), 8: (10, 0), 4: (4, 0), 19: (10, 0)}, 8: {20: (6, 6)}, 18: {20: (7, 7), 7: (2, 2), 8: (5, 5)}, 16: {20: (5, 5), 5: (3, 2), 7: (10, 1), 17: (4, 0)}, 17: {20: (4, 3), 14: (7, 0), 13: (1, 0), 5: (3, 0)}, 5: {13: (5, 2)}, 15: {9: (4, 0), 7: (2, 0)}, 12: {11: (6, 0), 7: (5, 0)}, 10: {9: (2, 2), 17: (9, 3), 3: (8, 0)}, 3: {2: (10, 0)}, 7: {10: (9, 3)}, 13: {16: (4, 0), 10: (2, 2)}, 6: {16: (10, 0)}})
Initial capacity flow in FE: (3, 0) for source 1 and sink 9
New capacity flow in FE: (3, 0) for source 1 and sink 9
Initial capacity flow in FE: (14, 2) for source 9 and sink 20
New capacity flow in FE: (14, 2) for source 9 and sink 20
Actual graph
defaultdict(<class 'dict'>, {1: {18: (24, 14), 16: (8, 8), 11: (8, 8), 8: (7, 1), 9: (3, 3), 12: (7, 0), 15: (9, 0), 2: (7, 0)}, 11: {20: (6, 6), 4: (8, 2)}, 4: {20: (11, 2)}, 14: {20: (4, 0), 16: (6, 0), 19: (7, 0), 15: (8, 0)}, 9: {20: (14, 5), 7: (8, 0), 8: (10, 0), 4: (4, 0), 19: (10, 0)}, 8: {20: (6, 6)}, 18: {20: (7, 7), 7: (2, 2), 8: (5, 5)}, 16: {20: (5, 5), 5: (3, 2), 7: (10, 1), 17: (4, 0)}, 17: {20: (4, 3), 14: (7, 0), 13: (1, 0), 5: (3, 0)}, 5: {13: (5, 2)}, 15: {9: (4, 0), 7: (2, 0)}, 12: {11: (6, 0), 7: (5, 0)}, 10: {9: (2, 2), 17: (9, 3), 3: (8, 0)}, 3: {2: (10, 0)}, 7: {10: (9, 3)}, 13: {16: (4, 0), 10: (2, 2)}, 6: {16: (10, 0)}})
Residual graph
defaultdict(<class 'dict'>, {1: {18: 10, 8: 6, 12: 7, 15: 9, 2: 7}, 18: {1: 14}, 16: {1: 8, 5: 1, 7: 9, 17: 4}, 11: {1: 8, 4: 6}, 8: {1: 1, 18: 5}, 9: {1: 3, 20: 9, 7: 8, 8: 10, 4: 4, 19: 10, 10: 2}, 20: {11: 6, 4: 2, 9: 5, 8: 6, 18: 7, 16: 5, 17: 3}, 4: {11: 2, 20: 9}, 14: {20: 4, 16: 6, 19: 7, 15: 8}, 7: {18: 2, 16: 1, 10: 6}, 5: {16: 2, 13: 3}, 17: {20: 1, 14: 7, 13: 1, 5: 3, 10: 3}, 13: {5: 2, 16: 4}, 15: {9: 4, 7: 2}, 12: {11: 6, 7: 5}, 10: {17: 6, 3: 8, 7: 3, 13: 2}, 3: {2: 10}, 6: {16: 10}})
All paths
[[1, 12, 11, 4, 20], [1, 12, 7, 16, 17, 20], [1, 12, 7, 16, 17, 14, 20], [1, 12, 7, 16, 17, 14, 15, 9, 20], [1, 12, 7, 16, 17, 14, 15, 9, 4, 20], [1, 12, 7, 10, 17, 20], [1, 12, 7, 10, 17, 14, 20], [1, 12, 7, 10, 17, 14, 15, 9, 20], [1, 12, 7, 10, 17, 14, 15, 9, 4, 20], [1, 12, 7, 10, 13, 5, 16, 17, 20], [1, 12, 7, 10, 13, 5, 16, 17, 14, 20], [1, 12, 7, 10, 13, 5, 16, 17, 14, 15, 9, 20], [1, 12, 7, 10, 13, 5, 16, 17, 14, 15, 9, 4, 20], [1, 12, 7, 10, 13, 16, 17, 20], [1, 12, 7, 10, 13, 16, 17, 14, 20], [1, 12, 7, 10, 13, 16, 17, 14, 15, 9, 20], [1, 12, 7, 10, 13, 16, 17, 14, 15, 9, 4, 20], [1, 15, 9, 20], [1, 15, 9, 7, 16, 17, 20], [1, 15, 9, 7, 16, 17, 14, 20], [1, 15, 9, 7, 10, 17, 20], [1, 15, 9, 7, 10, 17, 14, 20], [1, 15, 9, 7, 10, 13, 5, 16, 17, 20], [1, 15, 9, 7, 10, 13, 5, 16, 17, 14, 20], [1, 15, 9, 7, 10, 13, 16, 17, 20], [1, 15, 9, 7, 10, 13, 16, 17, 14, 20], [1, 15, 9, 4, 20], [1, 15, 9, 10, 17, 20], [1, 15, 9, 10, 17, 14, 20], [1, 15, 9, 10, 7, 16, 17, 20], [1, 15, 9, 10, 7, 16, 17, 14, 20], [1, 15, 9, 10, 13, 5, 16, 17, 20], [1, 15, 9, 10, 13, 5, 16, 17, 14, 20], [1, 15, 9, 10, 13, 16, 17, 20], [1, 15, 9, 10, 13, 16, 17, 14, 20], [1, 15, 7, 16, 17, 20], [1, 15, 7, 16, 17, 14, 20], [1, 15, 7, 10, 17, 20], [1, 15, 7, 10, 17, 14, 20], [1, 15, 7, 10, 13, 5, 16, 17, 20], [1, 15, 7, 10, 13, 5, 16, 17, 14, 20], [1, 15, 7, 10, 13, 16, 17, 20], [1, 15, 7, 10, 13, 16, 17, 14, 20]]
Capacities: [7, 6, 9, 6]
Bottleneck: 6
defaultdict(<class 'dict'>, {1: {18: (24, 14), 16: (8, 8), 11: (8, 8), 8: (7, 1), 9: (3, 3), 12: (7, 0), 15: (9, 0), 2: (7, 0)}, 11: {20: (6, 6), 4: (8, 2)}, 4: {20: (11, 2)}, 14: {20: (4, 0), 16: (6, 0), 19: (7, 0), 15: (8, 0)}, 9: {20: (14, 5), 7: (8, 0), 8: (10, 0), 4: (4, 0), 19: (10, 0)}, 8: {20: (6, 6)}, 18: {20: (7, 7), 7: (2, 2), 8: (5, 5)}, 16: {20: (5, 5), 5: (3, 2), 7: (10, 1), 17: (4, 0)}, 17: {20: (4, 3), 14: (7, 0), 13: (1, 0), 5: (3, 0)}, 5: {13: (5, 2)}, 15: {9: (4, 0), 7: (2, 0)}, 12: {11: (6, 0), 7: (5, 0)}, 10: {9: (2, 2), 17: (9, 3), 3: (8, 0)}, 3: {2: (10, 0)}, 7: {10: (9, 3)}, 13: {16: (4, 0), 10: (2, 2)}, 6: {16: (10, 0)}})
Initial capacity flow in FE: (7, 0) for source 1 and sink 12
New capacity flow in FE: (7, 0) for source 1 and sink 12
Initial capacity flow in FE: (8, 2) for source 11 and sink 4
New capacity flow in FE: (8, 2) for source 11 and sink 4
Initial capacity flow in FE: (11, 2) for source 4 and sink 20
New capacity flow in FE: (11, 2) for source 4 and sink 20
Initial capacity flow in FE: (6, 0) for source 12 and sink 11
New capacity flow in FE: (6, 0) for source 12 and sink 11
Actual graph
defaultdict(<class 'dict'>, {1: {18: (24, 14), 16: (8, 8), 11: (8, 8), 8: (7, 1), 9: (3, 3), 12: (7, 6), 15: (9, 0), 2: (7, 0)}, 11: {20: (6, 6), 4: (8, 8)}, 4: {20: (11, 8)}, 14: {20: (4, 0), 16: (6, 0), 19: (7, 0), 15: (8, 0)}, 9: {20: (14, 5), 7: (8, 0), 8: (10, 0), 4: (4, 0), 19: (10, 0)}, 8: {20: (6, 6)}, 18: {20: (7, 7), 7: (2, 2), 8: (5, 5)}, 16: {20: (5, 5), 5: (3, 2), 7: (10, 1), 17: (4, 0)}, 17: {20: (4, 3), 14: (7, 0), 13: (1, 0), 5: (3, 0)}, 5: {13: (5, 2)}, 15: {9: (4, 0), 7: (2, 0)}, 12: {11: (6, 6), 7: (5, 0)}, 10: {9: (2, 2), 17: (9, 3), 3: (8, 0)}, 3: {2: (10, 0)}, 7: {10: (9, 3)}, 13: {16: (4, 0), 10: (2, 2)}, 6: {16: (10, 0)}})
Residual graph
defaultdict(<class 'dict'>, {1: {18: 10, 8: 6, 12: 1, 15: 9, 2: 7}, 18: {1: 14}, 16: {1: 8, 5: 1, 7: 9, 17: 4}, 11: {1: 8, 12: 6}, 8: {1: 1, 18: 5}, 9: {1: 3, 20: 9, 7: 8, 8: 10, 4: 4, 19: 10, 10: 2}, 12: {1: 6, 7: 5}, 20: {11: 6, 4: 8, 9: 5, 8: 6, 18: 7, 16: 5, 17: 3}, 4: {11: 8, 20: 3}, 14: {20: 4, 16: 6, 19: 7, 15: 8}, 7: {18: 2, 16: 1, 10: 6}, 5: {16: 2, 13: 3}, 17: {20: 1, 14: 7, 13: 1, 5: 3, 10: 3}, 13: {5: 2, 16: 4}, 15: {9: 4, 7: 2}, 10: {17: 6, 3: 8, 7: 3, 13: 2}, 3: {2: 10}, 6: {16: 10}})
All paths
[[1, 12, 7, 16, 17, 20], [1, 12, 7, 16, 17, 14, 20], [1, 12, 7, 16, 17, 14, 15, 9, 20], [1, 12, 7, 16, 17, 14, 15, 9, 4, 20], [1, 12, 7, 10, 17, 20], [1, 12, 7, 10, 17, 14, 20], [1, 12, 7, 10, 17, 14, 15, 9, 20], [1, 12, 7, 10, 17, 14, 15, 9, 4, 20], [1, 12, 7, 10, 13, 5, 16, 17, 20], [1, 12, 7, 10, 13, 5, 16, 17, 14, 20], [1, 12, 7, 10, 13, 5, 16, 17, 14, 15, 9, 20], [1, 12, 7, 10, 13, 5, 16, 17, 14, 15, 9, 4, 20], [1, 12, 7, 10, 13, 16, 17, 20], [1, 12, 7, 10, 13, 16, 17, 14, 20], [1, 12, 7, 10, 13, 16, 17, 14, 15, 9, 20], [1, 12, 7, 10, 13, 16, 17, 14, 15, 9, 4, 20], [1, 15, 9, 20], [1, 15, 9, 7, 16, 17, 20], [1, 15, 9, 7, 16, 17, 14, 20], [1, 15, 9, 7, 10, 17, 20], [1, 15, 9, 7, 10, 17, 14, 20], [1, 15, 9, 7, 10, 13, 5, 16, 17, 20], [1, 15, 9, 7, 10, 13, 5, 16, 17, 14, 20], [1, 15, 9, 7, 10, 13, 16, 17, 20], [1, 15, 9, 7, 10, 13, 16, 17, 14, 20], [1, 15, 9, 4, 11, 12, 7, 16, 17, 20], [1, 15, 9, 4, 11, 12, 7, 16, 17, 14, 20], [1, 15, 9, 4, 11, 12, 7, 10, 17, 20], [1, 15, 9, 4, 11, 12, 7, 10, 17, 14, 20], [1, 15, 9, 4, 11, 12, 7, 10, 13, 5, 16, 17, 20], [1, 15, 9, 4, 11, 12, 7, 10, 13, 5, 16, 17, 14, 20], [1, 15, 9, 4, 11, 12, 7, 10, 13, 16, 17, 20], [1, 15, 9, 4, 11, 12, 7, 10, 13, 16, 17, 14, 20], [1, 15, 9, 4, 20], [1, 15, 9, 10, 17, 20], [1, 15, 9, 10, 17, 14, 20], [1, 15, 9, 10, 7, 16, 17, 20], [1, 15, 9, 10, 7, 16, 17, 14, 20], [1, 15, 9, 10, 13, 5, 16, 17, 20], [1, 15, 9, 10, 13, 5, 16, 17, 14, 20], [1, 15, 9, 10, 13, 16, 17, 20], [1, 15, 9, 10, 13, 16, 17, 14, 20], [1, 15, 7, 16, 17, 20], [1, 15, 7, 16, 17, 14, 20], [1, 15, 7, 10, 17, 20], [1, 15, 7, 10, 17, 14, 20], [1, 15, 7, 10, 13, 5, 16, 17, 20], [1, 15, 7, 10, 13, 5, 16, 17, 14, 20], [1, 15, 7, 10, 13, 16, 17, 20], [1, 15, 7, 10, 13, 16, 17, 14, 20]]
Capacities: [1, 4, 5, 1, 1]
Bottleneck: 1
defaultdict(<class 'dict'>, {1: {18: (24, 14), 16: (8, 8), 11: (8, 8), 8: (7, 1), 9: (3, 3), 12: (7, 6), 15: (9, 0), 2: (7, 0)}, 11: {20: (6, 6), 4: (8, 8)}, 4: {20: (11, 8)}, 14: {20: (4, 0), 16: (6, 0), 19: (7, 0), 15: (8, 0)}, 9: {20: (14, 5), 7: (8, 0), 8: (10, 0), 4: (4, 0), 19: (10, 0)}, 8: {20: (6, 6)}, 18: {20: (7, 7), 7: (2, 2), 8: (5, 5)}, 16: {20: (5, 5), 5: (3, 2), 7: (10, 1), 17: (4, 0)}, 17: {20: (4, 3), 14: (7, 0), 13: (1, 0), 5: (3, 0)}, 5: {13: (5, 2)}, 15: {9: (4, 0), 7: (2, 0)}, 12: {11: (6, 6), 7: (5, 0)}, 10: {9: (2, 2), 17: (9, 3), 3: (8, 0)}, 3: {2: (10, 0)}, 7: {10: (9, 3)}, 13: {16: (4, 0), 10: (2, 2)}, 6: {16: (10, 0)}})
Initial capacity flow in FE: (7, 6) for source 1 and sink 12
New capacity flow in FE: (7, 6) for source 1 and sink 12
Initial capacity flow in BE: (10, 1) for source 16 and sink 7
New capacity flow in BE: (10, 1) for source 16 and sink 7
Initial capacity flow in FE: (4, 0) for source 16 and sink 17
New capacity flow in FE: (4, 0) for source 16 and sink 17
Initial capacity flow in FE: (4, 3) for source 17 and sink 20
New capacity flow in FE: (4, 3) for source 17 and sink 20
Initial capacity flow in FE: (5, 0) for source 12 and sink 7
New capacity flow in FE: (5, 0) for source 12 and sink 7
Initial capacity flow in FE: (10, 0) for source 7 and sink 16
New capacity flow in FE: (10, 0) for source 7 and sink 16
Actual graph
defaultdict(<class 'dict'>, {1: {18: (24, 14), 16: (8, 8), 11: (8, 8), 8: (7, 1), 9: (3, 3), 12: (7, 7), 15: (9, 0), 2: (7, 0)}, 11: {20: (6, 6), 4: (8, 8)}, 4: {20: (11, 8)}, 14: {20: (4, 0), 16: (6, 0), 19: (7, 0), 15: (8, 0)}, 9: {20: (14, 5), 7: (8, 0), 8: (10, 0), 4: (4, 0), 19: (10, 0)}, 8: {20: (6, 6)}, 18: {20: (7, 7), 7: (2, 2), 8: (5, 5)}, 16: {20: (5, 5), 5: (3, 2), 7: (10, 1), 17: (4, 1)}, 17: {20: (4, 4), 14: (7, 0), 13: (1, 0), 5: (3, 0)}, 5: {13: (5, 2)}, 15: {9: (4, 0), 7: (2, 0)}, 12: {11: (6, 6), 7: (5, 1)}, 10: {9: (2, 2), 17: (9, 3), 3: (8, 0)}, 3: {2: (10, 0)}, 7: {10: (9, 3), 16: (10, 1)}, 13: {16: (4, 0), 10: (2, 2)}, 6: {16: (10, 0)}})
Residual graph
defaultdict(<class 'dict'>, {1: {18: 10, 8: 6, 15: 9, 2: 7}, 18: {1: 14}, 16: {1: 8, 5: 1, 7: 1, 17: 3}, 11: {1: 8, 12: 6}, 8: {1: 1, 18: 5}, 9: {1: 3, 20: 9, 7: 8, 8: 10, 4: 4, 19: 10, 10: 2}, 12: {1: 7, 7: 4}, 20: {11: 6, 4: 8, 9: 5, 8: 6, 18: 7, 16: 5, 17: 4}, 4: {11: 8, 20: 3}, 14: {20: 4, 16: 6, 19: 7, 15: 8}, 7: {18: 2, 16: 9, 12: 1, 10: 6}, 5: {16: 2, 13: 3}, 17: {16: 1, 14: 7, 13: 1, 5: 3, 10: 3}, 13: {5: 2, 16: 4}, 15: {9: 4, 7: 2}, 10: {17: 6, 3: 8, 7: 3, 13: 2}, 3: {2: 10}, 6: {16: 10}})
All paths
[[1, 15, 9, 20], [1, 15, 9, 7, 16, 17, 14, 20], [1, 15, 9, 7, 10, 17, 14, 20], [1, 15, 9, 7, 10, 13, 5, 16, 17, 14, 20], [1, 15, 9, 7, 10, 13, 16, 17, 14, 20], [1, 15, 9, 4, 11, 12, 7, 16, 17, 14, 20], [1, 15, 9, 4, 11, 12, 7, 10, 17, 14, 20], [1, 15, 9, 4, 11, 12, 7, 10, 13, 5, 16, 17, 14, 20], [1, 15, 9, 4, 11, 12, 7, 10, 13, 16, 17, 14, 20], [1, 15, 9, 4, 20], [1, 15, 9, 10, 17, 14, 20], [1, 15, 9, 10, 7, 16, 17, 14, 20], [1, 15, 9, 10, 13, 5, 16, 17, 14, 20], [1, 15, 9, 10, 13, 16, 17, 14, 20], [1, 15, 7, 16, 17, 14, 20], [1, 15, 7, 10, 17, 14, 20], [1, 15, 7, 10, 13, 5, 16, 17, 14, 20], [1, 15, 7, 10, 13, 16, 17, 14, 20]]
Capacities: [9, 9, 4]
Bottleneck: 4
defaultdict(<class 'dict'>, {1: {18: (24, 14), 16: (8, 8), 11: (8, 8), 8: (7, 1), 9: (3, 3), 12: (7, 7), 15: (9, 0), 2: (7, 0)}, 11: {20: (6, 6), 4: (8, 8)}, 4: {20: (11, 8)}, 14: {20: (4, 0), 16: (6, 0), 19: (7, 0), 15: (8, 0)}, 9: {20: (14, 5), 7: (8, 0), 8: (10, 0), 4: (4, 0), 19: (10, 0)}, 8: {20: (6, 6)}, 18: {20: (7, 7), 7: (2, 2), 8: (5, 5)}, 16: {20: (5, 5), 5: (3, 2), 7: (10, 1), 17: (4, 1)}, 17: {20: (4, 4), 14: (7, 0), 13: (1, 0), 5: (3, 0)}, 5: {13: (5, 2)}, 15: {9: (4, 0), 7: (2, 0)}, 12: {11: (6, 6), 7: (5, 1)}, 10: {9: (2, 2), 17: (9, 3), 3: (8, 0)}, 3: {2: (10, 0)}, 7: {10: (9, 3), 16: (10, 1)}, 13: {16: (4, 0), 10: (2, 2)}, 6: {16: (10, 0)}})
Initial capacity flow in FE: (9, 0) for source 1 and sink 15
New capacity flow in FE: (9, 0) for source 1 and sink 15
Initial capacity flow in FE: (14, 5) for source 9 and sink 20
New capacity flow in FE: (14, 5) for source 9 and sink 20
Initial capacity flow in FE: (4, 0) for source 15 and sink 9
New capacity flow in FE: (4, 0) for source 15 and sink 9
Actual graph
defaultdict(<class 'dict'>, {1: {18: (24, 14), 16: (8, 8), 11: (8, 8), 8: (7, 1), 9: (3, 3), 12: (7, 7), 15: (9, 4), 2: (7, 0)}, 11: {20: (6, 6), 4: (8, 8)}, 4: {20: (11, 8)}, 14: {20: (4, 0), 16: (6, 0), 19: (7, 0), 15: (8, 0)}, 9: {20: (14, 9), 7: (8, 0), 8: (10, 0), 4: (4, 0), 19: (10, 0)}, 8: {20: (6, 6)}, 18: {20: (7, 7), 7: (2, 2), 8: (5, 5)}, 16: {20: (5, 5), 5: (3, 2), 7: (10, 1), 17: (4, 1)}, 17: {20: (4, 4), 14: (7, 0), 13: (1, 0), 5: (3, 0)}, 5: {13: (5, 2)}, 15: {9: (4, 4), 7: (2, 0)}, 12: {11: (6, 6), 7: (5, 1)}, 10: {9: (2, 2), 17: (9, 3), 3: (8, 0)}, 3: {2: (10, 0)}, 7: {10: (9, 3), 16: (10, 1)}, 13: {16: (4, 0), 10: (2, 2)}, 6: {16: (10, 0)}})
Residual graph
defaultdict(<class 'dict'>, {1: {18: 10, 8: 6, 15: 5, 2: 7}, 18: {1: 14}, 16: {1: 8, 5: 1, 7: 1, 17: 3}, 11: {1: 8, 12: 6}, 8: {1: 1, 18: 5}, 9: {1: 3, 20: 5, 7: 8, 8: 10, 4: 4, 19: 10, 15: 4, 10: 2}, 12: {1: 7, 7: 4}, 15: {1: 4, 7: 2}, 20: {11: 6, 4: 8, 9: 9, 8: 6, 18: 7, 16: 5, 17: 4}, 4: {11: 8, 20: 3}, 14: {20: 4, 16: 6, 19: 7, 15: 8}, 7: {18: 2, 16: 9, 12: 1, 10: 6}, 5: {16: 2, 13: 3}, 17: {16: 1, 14: 7, 13: 1, 5: 3, 10: 3}, 13: {5: 2, 16: 4}, 10: {17: 6, 3: 8, 7: 3, 13: 2}, 3: {2: 10}, 6: {16: 10}})
All paths
[[1, 15, 7, 16, 17, 14, 20], [1, 15, 7, 10, 17, 14, 20], [1, 15, 7, 10, 13, 5, 16, 17, 14, 20], [1, 15, 7, 10, 13, 16, 17, 14, 20]]
Capacities: [5, 3, 2, 4, 9, 7]
Bottleneck: 2
defaultdict(<class 'dict'>, {1: {18: (24, 14), 16: (8, 8), 11: (8, 8), 8: (7, 1), 9: (3, 3), 12: (7, 7), 15: (9, 4), 2: (7, 0)}, 11: {20: (6, 6), 4: (8, 8)}, 4: {20: (11, 8)}, 14: {20: (4, 0), 16: (6, 0), 19: (7, 0), 15: (8, 0)}, 9: {20: (14, 9), 7: (8, 0), 8: (10, 0), 4: (4, 0), 19: (10, 0)}, 8: {20: (6, 6)}, 18: {20: (7, 7), 7: (2, 2), 8: (5, 5)}, 16: {20: (5, 5), 5: (3, 2), 7: (10, 1), 17: (4, 1)}, 17: {20: (4, 4), 14: (7, 0), 13: (1, 0), 5: (3, 0)}, 5: {13: (5, 2)}, 15: {9: (4, 4), 7: (2, 0)}, 12: {11: (6, 6), 7: (5, 1)}, 10: {9: (2, 2), 17: (9, 3), 3: (8, 0)}, 3: {2: (10, 0)}, 7: {10: (9, 3), 16: (10, 1)}, 13: {16: (4, 0), 10: (2, 2)}, 6: {16: (10, 0)}})
Initial capacity flow in FE: (9, 4) for source 1 and sink 15
New capacity flow in FE: (9, 4) for source 1 and sink 15
Initial capacity flow in FE: (4, 0) for source 14 and sink 20
New capacity flow in FE: (4, 0) for source 14 and sink 20
Initial capacity flow in BE: (10, 1) for source 16 and sink 7
New capacity flow in BE: (10, 1) for source 16 and sink 7
Initial capacity flow in FE: (4, 1) for source 16 and sink 17
New capacity flow in FE: (4, 1) for source 16 and sink 17
Initial capacity flow in FE: (7, 0) for source 17 and sink 14
New capacity flow in FE: (7, 0) for source 17 and sink 14
Initial capacity flow in FE: (2, 0) for source 15 and sink 7
New capacity flow in FE: (2, 0) for source 15 and sink 7
Initial capacity flow in FE: (10, -1) for source 7 and sink 16
New capacity flow in FE: (10, -1) for source 7 and sink 16
Actual graph
defaultdict(<class 'dict'>, {1: {18: (24, 14), 16: (8, 8), 11: (8, 8), 8: (7, 1), 9: (3, 3), 12: (7, 7), 15: (9, 6), 2: (7, 0)}, 11: {20: (6, 6), 4: (8, 8)}, 4: {20: (11, 8)}, 14: {20: (4, 2), 16: (6, 0), 19: (7, 0), 15: (8, 0)}, 9: {20: (14, 9), 7: (8, 0), 8: (10, 0), 4: (4, 0), 19: (10, 0)}, 8: {20: (6, 6)}, 18: {20: (7, 7), 7: (2, 2), 8: (5, 5)}, 16: {20: (5, 5), 5: (3, 2), 7: (10, 1), 17: (4, 3)}, 17: {20: (4, 4), 14: (7, 2), 13: (1, 0), 5: (3, 0)}, 5: {13: (5, 2)}, 15: {9: (4, 4), 7: (2, 2)}, 12: {11: (6, 6), 7: (5, 1)}, 10: {9: (2, 2), 17: (9, 3), 3: (8, 0)}, 3: {2: (10, 0)}, 7: {10: (9, 3), 16: (10, 1)}, 13: {16: (4, 0), 10: (2, 2)}, 6: {16: (10, 0)}})
Residual graph
defaultdict(<class 'dict'>, {1: {18: 10, 8: 6, 15: 3, 2: 7}, 18: {1: 14}, 16: {1: 8, 5: 1, 7: 1, 17: 1}, 11: {1: 8, 12: 6}, 8: {1: 1, 18: 5}, 9: {1: 3, 20: 5, 7: 8, 8: 10, 4: 4, 19: 10, 15: 4, 10: 2}, 12: {1: 7, 7: 4}, 15: {1: 6}, 20: {11: 6, 4: 8, 14: 2, 9: 9, 8: 6, 18: 7, 16: 5, 17: 4}, 4: {11: 8, 20: 3}, 14: {20: 2, 16: 6, 19: 7, 15: 8, 17: 2}, 7: {18: 2, 16: 9, 15: 2, 12: 1, 10: 6}, 5: {16: 2, 13: 3}, 17: {16: 3, 14: 5, 13: 1, 5: 3, 10: 3}, 13: {5: 2, 16: 4}, 10: {17: 6, 3: 8, 7: 3, 13: 2}, 3: {2: 10}, 6: {16: 10}})
All paths
[]
47
47
47
47
47
47
47
47
47
47
47
47
47
47
None
